{"ast":null,"code":"import React,{useState,useRef,useEffect,useCallback}from'react';import{Box,Typography,Button,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Alert,CircularProgress,Grid,Card,CardContent,Container,Divider,Chip,Tooltip,Fade,Zoom,useTheme}from'@mui/material';import{styled}from'@mui/material/styles';import CloudUploadIcon from'@mui/icons-material/CloudUpload';import DownloadIcon from'@mui/icons-material/Download';import PlayArrowIcon from'@mui/icons-material/PlayArrow';import PeopleIcon from'@mui/icons-material/People';import AccountBalanceWalletIcon from'@mui/icons-material/AccountBalanceWallet';import TrendingUpIcon from'@mui/icons-material/TrendingUp';import AccessTimeIcon from'@mui/icons-material/AccessTime';import{salaryService}from'../services/api';import{isDemoMode}from'../context/AuthContext';// Styled components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DashboardContainer=styled(Box)(_ref=>{let{theme}=_ref;return{minHeight:'calc(100vh - 64px)',background:'linear-gradient(135deg, rgba(25, 118, 210, 0.05) 0%, rgba(156, 39, 176, 0.05) 100%)',padding:theme.spacing(3)};});const PageHeader=styled(Box)(_ref2=>{let{theme}=_ref2;return{marginBottom:theme.spacing(4),display:'flex',flexDirection:'column',[theme.breakpoints.up('md')]:{flexDirection:'row',justifyContent:'space-between',alignItems:'center'}};});const StyledCard=styled(Card)(_ref3=>{let{theme}=_ref3;return{borderRadius:'16px',boxShadow:'0 8px 32px rgba(0, 0, 0, 0.1)',height:'100%',transition:'all 0.3s ease','&:hover':{transform:'translateY(-5px)',boxShadow:'0 12px 40px rgba(0, 0, 0, 0.15)'}};});const MetricCard=styled(StyledCard)(_ref4=>{let{theme,color='primary'}=_ref4;return{background:\"linear-gradient(135deg, \".concat(theme.palette[color].light,\" 0%, \").concat(theme.palette[color].main,\" 100%)\"),color:'white'};});const UploadCard=styled(StyledCard)(_ref5=>{let{theme}=_ref5;return{background:'white',overflow:'hidden',position:'relative','&::after':{content:'\"\"',position:'absolute',bottom:0,right:0,width:'30%',height:'30%',background:'linear-gradient(135deg, transparent 0%, rgba(25, 118, 210, 0.05) 100%)',borderTopLeftRadius:'50%'}};});const FileUploadArea=styled(Box)(_ref6=>{let{theme,isDragging}=_ref6;return{border:\"2px dashed \".concat(isDragging?theme.palette.primary.main:'#ccc'),borderRadius:'12px',padding:theme.spacing(4),textAlign:'center',backgroundColor:isDragging?'rgba(25, 118, 210, 0.05)':'#f9f9f9',margin:theme.spacing(2,0,3),cursor:'pointer',transition:'all 0.3s ease','&:hover':{borderColor:theme.palette.primary.main,backgroundColor:'rgba(25, 118, 210, 0.05)'}};});const ActionButton=styled(Button)(_ref7=>{let{theme}=_ref7;return{borderRadius:'28px',padding:theme.spacing(1.2,3),textTransform:'none',fontWeight:600,boxShadow:'0 4px 12px rgba(0, 0, 0, 0.1)',transition:'all 0.3s ease','&:hover':{transform:'translateY(-2px)',boxShadow:'0 6px 16px rgba(0, 0, 0, 0.15)'}};});const StyledTableContainer=styled(TableContainer)(_ref8=>{let{theme}=_ref8;return{borderRadius:'12px',boxShadow:'0 4px 20px rgba(0, 0, 0, 0.08)','.MuiTableCell-head':{backgroundColor:theme.palette.primary.main,color:'white',fontWeight:600},'.MuiTableRow-root':{'&:nth-of-type(odd)':{backgroundColor:'rgba(0, 0, 0, 0.02)'},'&:hover':{backgroundColor:'rgba(25, 118, 210, 0.05)'}}};});const Dashboard=()=>{const[file,setFile]=useState(null);const[error,setError]=useState('');const[loading,setLoading]=useState(false);const[salaryResults,setSalaryResults]=useState([]);const[processedData,setProcessedData]=useState(null);const[isDragging,setIsDragging]=useState(false);const[fadeIn,setFadeIn]=useState(false);const fileInputRef=useRef(null);const theme=useTheme();useEffect(()=>{// Trigger fade-in animation after component mounts\nsetFadeIn(true);},[]);const handleFileChange=e=>{const selectedFile=e.target.files[0];if(selectedFile){// Check if the file is an Excel file\nif(!selectedFile.name.endsWith('.xls')&&!selectedFile.name.endsWith('.xlsx')){setError('Please upload an Excel file (.xls or .xlsx)');setFile(null);return;}setError('');setFile(selectedFile);// In demo mode, automatically process the file after a short delay\nif(isDemoMode()){setLoading(true);setTimeout(()=>{processDemoData();setLoading(false);},1500);// Simulate processing time\n}}};const handleFileUploadClick=()=>{fileInputRef.current.click();};// Drag and drop handlers\nconst handleDragOver=e=>{e.preventDefault();setIsDragging(true);};const handleDragLeave=()=>{setIsDragging(false);};const handleDrop=e=>{e.preventDefault();setIsDragging(false);if(e.dataTransfer.files&&e.dataTransfer.files.length>0){const droppedFile=e.dataTransfer.files[0];// Check if the file is an Excel file\nif(!droppedFile.name.endsWith('.xls')&&!droppedFile.name.endsWith('.xlsx')){setError('Please upload an Excel file (.xls or .xlsx)');return;}setError('');setFile(droppedFile);// In demo mode, automatically process the file after a short delay\nif(isDemoMode()){setLoading(true);setTimeout(()=>{processDemoData();setLoading(false);},1500);// Simulate processing time\n}}};// Mock data for demo mode\nconst mockSalaryData={employeeResults:[{employeeId:1,employeeName:'John Doe',expectedHours:160,actualWorkedHours:165,monthlySalary:5000,finalPayableSalary:5156.25,lateMarks:0,coefficient:1.03},{employeeId:2,employeeName:'Jane Smith',expectedHours:160,actualWorkedHours:155,monthlySalary:4800,finalPayableSalary:4650,lateMarks:1,coefficient:0.97},{employeeId:3,employeeName:'Mike Johnson',expectedHours:160,actualWorkedHours:152,monthlySalary:5200,finalPayableSalary:4940,lateMarks:2,coefficient:0.95},{employeeId:4,employeeName:'Sarah Williams',expectedHours:160,actualWorkedHours:168,monthlySalary:5500,finalPayableSalary:5775,lateMarks:0,coefficient:1.05},{employeeId:5,employeeName:'David Brown',expectedHours:160,actualWorkedHours:140,monthlySalary:4700,finalPayableSalary:4112.5,lateMarks:3,coefficient:0.87}]};// Calculate metrics from salary results\nconst calculateMetrics=results=>{const totalEmployees=results.length;const totalSalary=results.reduce((sum,item)=>sum+item.finalPayableSalary,0);const averageSalary=totalSalary/totalEmployees;const totalLateMarks=results.reduce((sum,item)=>sum+item.lateMarks,0);setProcessedData({totalEmployees,totalSalary,averageSalary,totalLateMarks});};// Process demo data function\nconst processDemoData=()=>{setSalaryResults(mockSalaryData.employeeResults);calculateMetrics(mockSalaryData.employeeResults);};// Auto-load mock data in demo mode\nuseEffect(()=>{if(isDemoMode()){// Simulate loading delay\nconst timer=setTimeout(()=>{// Set salary results\nsetSalaryResults(mockSalaryData.employeeResults);// Calculate summary data for metrics\nconst totalEmployees=mockSalaryData.employeeResults.length;const totalSalary=mockSalaryData.employeeResults.reduce((sum,item)=>sum+item.finalPayableSalary,0);const averageSalary=totalSalary/totalEmployees;const totalLateMarks=mockSalaryData.employeeResults.reduce((sum,item)=>sum+item.lateMarks,0);// Set processed data with calculated metrics\nsetProcessedData({totalEmployees,totalSalary,averageSalary,totalLateMarks});},1000);return()=>clearTimeout(timer);}},[]);const handleProcessSalary=async()=>{if(!file){setError('Please upload a file first');return;}setLoading(true);setError('');const formData=new FormData();formData.append('file',file);try{// Check if we're in demo mode\nif(isDemoMode()){await new Promise(resolve=>setTimeout(resolve,1500));// Simulate API delay\nprocessDemoData();}else{const results=await salaryService.processSalary(file);setSalaryResults(results);// Calculate summary data\nconst totalEmployees=results.length;const totalSalary=results.reduce((sum,item)=>sum+item.finalPayableSalary,0);const averageSalary=totalSalary/totalEmployees;const totalLateMarks=results.reduce((sum,item)=>sum+item.lateMarks,0);setProcessedData({totalEmployees,totalSalary,averageSalary,totalLateMarks});}}catch(err){var _err$response,_err$response$data;console.error('Error processing salary:',err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Error processing salary data');}finally{setLoading(false);}};const handleDownloadPdf=async employeeId=>{try{setLoading(true);// Check if we're in demo mode\nif(isDemoMode()){await new Promise(resolve=>setTimeout(resolve,800));// Simulate download delay\n// Generate a simple PDF with employee data in demo mode\nconst employee=salaryResults.find(emp=>emp.employeeId===employeeId);if(!employee){throw new Error('Employee not found');}// Create a simple PDF using Canvas and jsPDF (we simulate this)\nsimulatePdfDownload(employee);}else{const response=await salaryService.generatePdf(employeeId);// Create blob URL\nconst blob=new Blob([response.data],{type:'application/pdf'});const url=window.URL.createObjectURL(blob);// Create temporary link to download file\nconst link=document.createElement('a');link.href=url;link.setAttribute('download',\"salary_slip_\".concat(employeeId,\".pdf\"));document.body.appendChild(link);link.click();// Clean up\nlink.parentNode.removeChild(link);window.URL.revokeObjectURL(url);}}catch(error){console.error('Error downloading PDF:',error);setError('Error downloading PDF. Please try again.');}finally{setLoading(false);}};// Function to handle bulk PDF download\nconst handleBulkPdfDownload=async()=>{if(!salaryResults||salaryResults.length===0){setError('No salary data to download');return;}setLoading(true);setError('');try{// Check if we're in demo mode\nif(isDemoMode()){await new Promise(resolve=>setTimeout(resolve,1000));// Simulate API delay\n// Create a simple text file with all employee data in demo mode\nconst textContent=salaryResults.map(employee=>{return\"\\n            SALARY SLIP - \".concat(employee.employeeName,\"\\n            ------------------\\n            \\n            Employee ID: \").concat(employee.employeeId,\"\\n            Name: \").concat(employee.employeeName,\"\\n            \\n            Basic Salary: \").concat(formatCurrency(employee.monthlySalary),\"\\n            Performance Coefficient: \").concat(formatPercentage(employee.coefficient),\"\\n            Late Marks: \").concat(employee.lateMarks,\"\\n            \\n            Hours Expected: \").concat(employee.expectedHours?employee.expectedHours.toFixed(1):'0.0',\"\\n            Hours Worked: \").concat(employee.actualWorkedHours?employee.actualWorkedHours.toFixed(1):'0.0',\"\\n            \\n            Final Payable Salary: \").concat(formatCurrency(employee.finalPayableSalary),\"\\n            \\n            This is a demo PDF generated on \").concat(new Date().toLocaleDateString(),\"\\n            ==========================================\\n          \");}).join('\\n');// Create a Blob with the text content\nconst blob=new Blob([textContent],{type:'text/plain'});const url=window.URL.createObjectURL(blob);// Create a download link\nconst link=document.createElement('a');link.href=url;link.setAttribute('download','all_salary_slips.txt');document.body.appendChild(link);link.click();// Clean up\nlink.parentNode.removeChild(link);window.URL.revokeObjectURL(url);}else{// In real mode, call the bulk PDF generation API\nawait salaryService.generatePDFs(file);}}catch(error){console.error('Error generating bulk PDFs:',error);setError('Error generating bulk PDFs. Please try again.');}finally{setLoading(false);}};// Function to simulate PDF download in demo mode\nconst simulatePdfDownload=employee=>{// Create a text representation of what would be in the PDF\nconst pdfContent=\"\\n      SALARY SLIP\\n      ------------------\\n      \\n      Employee ID: \".concat(employee.employeeId,\"\\n      Name: \").concat(employee.employeeName,\"\\n      \\n      Basic Salary: \").concat(formatCurrency(employee.monthlySalary),\"\\n      Performance Coefficient: \").concat(formatPercentage(employee.coefficient),\"\\n      Late Marks: \").concat(employee.lateMarks,\"\\n      \\n      Hours Expected: \").concat(employee.expectedHours?employee.expectedHours.toFixed(1):'0.0',\"\\n      Hours Worked: \").concat(employee.actualWorkedHours?employee.actualWorkedHours.toFixed(1):'0.0',\"\\n      \\n      Final Payable Salary: \").concat(formatCurrency(employee.finalPayableSalary),\"\\n      \\n      This is a demo PDF generated on \").concat(new Date().toLocaleDateString(),\"\\n    \");// Create a Blob with the text content\nconst blob=new Blob([pdfContent],{type:'text/plain'});const url=window.URL.createObjectURL(blob);// Create a download link\nconst link=document.createElement('a');link.href=url;link.setAttribute('download',\"demo_salary_slip_\".concat(employee.employeeId,\".txt\"));document.body.appendChild(link);link.click();// Clean up\nlink.parentNode.removeChild(link);window.URL.revokeObjectURL(url);};// Format currency with safety check\nconst formatCurrency=amount=>{// Return 0 if amount is undefined or null\nif(amount===undefined||amount===null){return new Intl.NumberFormat('en-IN',{style:'currency',currency:'INR',minimumFractionDigits:2}).format(0);}return new Intl.NumberFormat('en-IN',{style:'currency',currency:'INR',minimumFractionDigits:2}).format(amount);};// Format percentage with safety check\nconst formatPercentage=value=>{// Return 0% if value is undefined or null\nif(value===undefined||value===null){return'0.00%';}return(value*100).toFixed(2)+'%';};// Get status color based on coefficient\nconst getStatusColor=coefficient=>{// Add safety check\nif(!coefficient)return'warning';if(coefficient>=0.95)return'success';if(coefficient>=0.85)return'warning';return'error';};// Get status label based on coefficient\nconst getStatusLabel=coefficient=>{// Add safety check\nif(!coefficient)return'N/A';if(coefficient>=0.95)return'Excellent';if(coefficient>=0.85)return'Good';if(coefficient>=0.75)return'Average';return'Below Average';};return/*#__PURE__*/_jsx(DashboardContainer,{children:/*#__PURE__*/_jsx(Fade,{in:fadeIn,timeout:800,children:/*#__PURE__*/_jsxs(Container,{maxWidth:\"xl\",children:[/*#__PURE__*/_jsxs(PageHeader,{children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",fontWeight:\"700\",color:\"primary.main\",children:\"Salary Processor Dashboard\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"text.secondary\",children:\"Upload, process and manage employee salary data\"})]}),processedData&&/*#__PURE__*/_jsx(Chip,{label:\"Month: \".concat(new Date().toLocaleString('default',{month:'long',year:'numeric'})),color:\"primary\",variant:\"outlined\",sx:{fontWeight:600,borderRadius:'16px',mt:{xs:2,md:0}}})]}),error&&/*#__PURE__*/_jsx(Fade,{in:!!error,timeout:500,children:/*#__PURE__*/_jsx(Alert,{severity:\"error\",variant:\"filled\",sx:{mb:3,borderRadius:'12px'},onClose:()=>setError(''),children:error})}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:5,lg:4,children:/*#__PURE__*/_jsx(Zoom,{in:fadeIn,timeout:800,children:/*#__PURE__*/_jsx(UploadCard,{elevation:3,children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",fontWeight:\"600\",gutterBottom:true,children:\"Upload Attendance Data\"}),/*#__PURE__*/_jsx(Divider,{sx:{mb:2}}),/*#__PURE__*/_jsxs(FileUploadArea,{onClick:handleFileUploadClick,onDragOver:handleDragOver,onDragLeave:handleDragLeave,onDrop:handleDrop,isDragging:isDragging,children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".xls,.xlsx\",onChange:handleFileChange,hidden:true,ref:fileInputRef}),/*#__PURE__*/_jsx(CloudUploadIcon,{sx:{fontSize:64,color:isDragging?'primary.main':'primary.light',mb:2,transition:'all 0.3s ease'}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,color:isDragging?'primary.main':'inherit',children:file?file.name:'Drag & Drop or Click to Upload'}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Upload monthly attendance Excel file (.xls or .xlsx)\"})]}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(ActionButton,{variant:\"contained\",color:\"primary\",fullWidth:true,onClick:handleProcessSalary,disabled:!file||loading,startIcon:loading?/*#__PURE__*/_jsx(CircularProgress,{size:20}):/*#__PURE__*/_jsx(PlayArrowIcon,{}),children:\"Process Data\"})})})]})})})}),processedData&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:7,lg:8,children:/*#__PURE__*/_jsx(Zoom,{in:!!processedData,timeout:500,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,lg:3,children:/*#__PURE__*/_jsx(MetricCard,{color:\"primary\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:3},children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",mb:1,children:[/*#__PURE__*/_jsx(PeopleIcon,{sx:{mr:1,opacity:0.8}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{opacity:0.8},children:\"Employees\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",fontWeight:\"600\",children:processedData.totalEmployees})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,lg:3,children:/*#__PURE__*/_jsx(MetricCard,{color:\"secondary\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:3},children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",mb:1,children:[/*#__PURE__*/_jsx(AccountBalanceWalletIcon,{sx:{mr:1,opacity:0.8}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{opacity:0.8},children:\"Total Payout\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",fontWeight:\"600\",children:formatCurrency(processedData.totalSalary)})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,lg:3,children:/*#__PURE__*/_jsx(MetricCard,{color:\"success\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:3},children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",mb:1,children:[/*#__PURE__*/_jsx(TrendingUpIcon,{sx:{mr:1,opacity:0.8}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{opacity:0.8},children:\"Average Salary\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",fontWeight:\"600\",children:formatCurrency(processedData.averageSalary)})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,lg:3,children:/*#__PURE__*/_jsx(MetricCard,{color:\"warning\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:3},children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",mb:1,children:[/*#__PURE__*/_jsx(AccessTimeIcon,{sx:{mr:1,opacity:0.8}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{opacity:0.8},children:\"Late Marks\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",fontWeight:\"600\",children:processedData.totalLateMarks})]})})})]})})})]}),salaryResults.length>0&&/*#__PURE__*/_jsx(Fade,{in:salaryResults.length>0,timeout:1000,children:/*#__PURE__*/_jsxs(Box,{sx:{mt:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",fontWeight:\"600\",color:\"text.primary\",gutterBottom:true,children:\"Salary Results\"}),/*#__PURE__*/_jsx(StyledTableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{\"aria-label\":\"salary results table\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Employee ID\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Monthly Salary\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Hours (Expected/Actual)\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Coefficient\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Late Marks\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Final Salary\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Status\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:salaryResults.map(row=>{const statusColor=getStatusColor(row.coefficient);return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{component:\"th\",scope:\"row\",children:row.employeeId}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{fontWeight:\"500\",children:row.employeeName})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:formatCurrency(row.monthlySalary)}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(Tooltip,{title:\"Expected: \".concat(row.expectedHours?row.expectedHours.toFixed(1):'0.0',\", Actual: \").concat(row.actualWorkedHours?row.actualWorkedHours.toFixed(1):'0.0'),children:/*#__PURE__*/_jsxs(\"span\",{children:[row.actualWorkedHours?row.actualWorkedHours.toFixed(1):'0.0',\" / \",row.expectedHours?row.expectedHours.toFixed(1):'0.0']})})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(Typography,{fontWeight:\"500\",color:\"\".concat(statusColor,\".main\"),children:formatPercentage(row.coefficient)})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.lateMarks}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(Typography,{fontWeight:\"700\",children:formatCurrency(row.finalPayableSalary)})}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsx(Chip,{label:getStatusLabel(row.coefficient),color:statusColor,size:\"small\",sx:{fontWeight:500}})}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsx(ActionButton,{size:\"small\",variant:\"outlined\",color:\"primary\",onClick:()=>handleDownloadPdf(row.employeeId),disabled:loading,startIcon:/*#__PURE__*/_jsx(DownloadIcon,{}),children:\"PDF\"})})]},row.employeeId);})})]})})]})})]})})});};export default Dashboard;","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","Box","Typography","Button","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Alert","CircularProgress","Grid","Card","CardContent","Container","Divider","Chip","Tooltip","Fade","Zoom","useTheme","styled","CloudUploadIcon","DownloadIcon","PlayArrowIcon","PeopleIcon","AccountBalanceWalletIcon","TrendingUpIcon","AccessTimeIcon","salaryService","isDemoMode","jsx","_jsx","jsxs","_jsxs","DashboardContainer","_ref","theme","minHeight","background","padding","spacing","PageHeader","_ref2","marginBottom","display","flexDirection","breakpoints","up","justifyContent","alignItems","StyledCard","_ref3","borderRadius","boxShadow","height","transition","transform","MetricCard","_ref4","color","concat","palette","light","main","UploadCard","_ref5","overflow","position","content","bottom","right","width","borderTopLeftRadius","FileUploadArea","_ref6","isDragging","border","primary","textAlign","backgroundColor","margin","cursor","borderColor","ActionButton","_ref7","textTransform","fontWeight","StyledTableContainer","_ref8","Dashboard","file","setFile","error","setError","loading","setLoading","salaryResults","setSalaryResults","processedData","setProcessedData","setIsDragging","fadeIn","setFadeIn","fileInputRef","handleFileChange","e","selectedFile","target","files","name","endsWith","setTimeout","processDemoData","handleFileUploadClick","current","click","handleDragOver","preventDefault","handleDragLeave","handleDrop","dataTransfer","length","droppedFile","mockSalaryData","employeeResults","employeeId","employeeName","expectedHours","actualWorkedHours","monthlySalary","finalPayableSalary","lateMarks","coefficient","calculateMetrics","results","totalEmployees","totalSalary","reduce","sum","item","averageSalary","totalLateMarks","timer","clearTimeout","handleProcessSalary","formData","FormData","append","Promise","resolve","processSalary","err","_err$response","_err$response$data","console","response","data","message","handleDownloadPdf","employee","find","emp","Error","simulatePdfDownload","generatePdf","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","parentNode","removeChild","revokeObjectURL","handleBulkPdfDownload","textContent","map","formatCurrency","formatPercentage","toFixed","Date","toLocaleDateString","join","generatePDFs","pdfContent","amount","undefined","Intl","NumberFormat","style","currency","minimumFractionDigits","format","value","getStatusColor","getStatusLabel","children","in","timeout","maxWidth","variant","component","label","toLocaleString","month","year","sx","mt","xs","md","severity","mb","onClose","container","lg","elevation","p","gutterBottom","onClick","onDragOver","onDragLeave","onDrop","accept","onChange","hidden","ref","fontSize","sm","fullWidth","disabled","startIcon","size","mr","opacity","align","row","statusColor","scope","title"],"sources":["/Users/vsalokhe/CascadeProjects/salary-processor-frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { \n  Box, \n  Typography, \n  Button, \n  Paper, \n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Alert,\n  CircularProgress,\n  Grid,\n  Card,\n  CardContent,\n  Container,\n  Divider,\n  Chip,\n  Tooltip,\n  Fade,\n  Zoom,\n  useTheme\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport PeopleIcon from '@mui/icons-material/People';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport { salaryService } from '../services/api';\nimport { isDemoMode } from '../context/AuthContext';\n\n// Styled components\nconst DashboardContainer = styled(Box)(({ theme }) => ({\n  minHeight: 'calc(100vh - 64px)',\n  background: 'linear-gradient(135deg, rgba(25, 118, 210, 0.05) 0%, rgba(156, 39, 176, 0.05) 100%)',\n  padding: theme.spacing(3),\n}));\n\nconst PageHeader = styled(Box)(({ theme }) => ({\n  marginBottom: theme.spacing(4),\n  display: 'flex',\n  flexDirection: 'column',\n  [theme.breakpoints.up('md')]: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  borderRadius: '16px',\n  boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\n  height: '100%',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    transform: 'translateY(-5px)',\n    boxShadow: '0 12px 40px rgba(0, 0, 0, 0.15)',\n  },\n}));\n\nconst MetricCard = styled(StyledCard)(({ theme, color = 'primary' }) => ({\n  background: `linear-gradient(135deg, ${theme.palette[color].light} 0%, ${theme.palette[color].main} 100%)`,\n  color: 'white',\n}));\n\nconst UploadCard = styled(StyledCard)(({ theme }) => ({\n  background: 'white',\n  overflow: 'hidden',\n  position: 'relative',\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    width: '30%',\n    height: '30%',\n    background: 'linear-gradient(135deg, transparent 0%, rgba(25, 118, 210, 0.05) 100%)',\n    borderTopLeftRadius: '50%',\n  },\n}));\n\nconst FileUploadArea = styled(Box)(({ theme, isDragging }) => ({\n  border: `2px dashed ${isDragging ? theme.palette.primary.main : '#ccc'}`,\n  borderRadius: '12px',\n  padding: theme.spacing(4),\n  textAlign: 'center',\n  backgroundColor: isDragging ? 'rgba(25, 118, 210, 0.05)' : '#f9f9f9',\n  margin: theme.spacing(2, 0, 3),\n  cursor: 'pointer',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    borderColor: theme.palette.primary.main,\n    backgroundColor: 'rgba(25, 118, 210, 0.05)',\n  },\n}));\n\nconst ActionButton = styled(Button)(({ theme }) => ({\n  borderRadius: '28px',\n  padding: theme.spacing(1.2, 3),\n  textTransform: 'none',\n  fontWeight: 600,\n  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    transform: 'translateY(-2px)',\n    boxShadow: '0 6px 16px rgba(0, 0, 0, 0.15)',\n  },\n}));\n\nconst StyledTableContainer = styled(TableContainer)(({ theme }) => ({\n  borderRadius: '12px',\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.08)',\n  '.MuiTableCell-head': {\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n    fontWeight: 600,\n  },\n  '.MuiTableRow-root': {\n    '&:nth-of-type(odd)': {\n      backgroundColor: 'rgba(0, 0, 0, 0.02)',\n    },\n    '&:hover': {\n      backgroundColor: 'rgba(25, 118, 210, 0.05)',\n    },\n  },\n}));\n\nconst Dashboard = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [salaryResults, setSalaryResults] = useState([]);\n  const [processedData, setProcessedData] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [fadeIn, setFadeIn] = useState(false);\n  const fileInputRef = useRef(null);\n  const theme = useTheme();\n  \n  useEffect(() => {\n    // Trigger fade-in animation after component mounts\n    setFadeIn(true);\n  }, []);\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      // Check if the file is an Excel file\n      if (\n        !selectedFile.name.endsWith('.xls') && \n        !selectedFile.name.endsWith('.xlsx')\n      ) {\n        setError('Please upload an Excel file (.xls or .xlsx)');\n        setFile(null);\n        return;\n      }\n      \n      setError('');\n      setFile(selectedFile);\n      \n      // In demo mode, automatically process the file after a short delay\n      if (isDemoMode()) {\n        setLoading(true);\n        setTimeout(() => {\n          processDemoData();\n          setLoading(false);\n        }, 1500); // Simulate processing time\n      }\n    }\n  };\n\n  const handleFileUploadClick = () => {\n    fileInputRef.current.click();\n  };\n  \n  // Drag and drop handlers\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  \n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n  \n  const handleDrop = (e) => {\n    e.preventDefault();\n    setIsDragging(false);\n    \n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const droppedFile = e.dataTransfer.files[0];\n      \n      // Check if the file is an Excel file\n      if (\n        !droppedFile.name.endsWith('.xls') && \n        !droppedFile.name.endsWith('.xlsx')\n      ) {\n        setError('Please upload an Excel file (.xls or .xlsx)');\n        return;\n      }\n      \n      setError('');\n      setFile(droppedFile);\n      \n      // In demo mode, automatically process the file after a short delay\n      if (isDemoMode()) {\n        setLoading(true);\n        setTimeout(() => {\n          processDemoData();\n          setLoading(false);\n        }, 1500); // Simulate processing time\n      }\n    }\n  };\n\n  // Mock data for demo mode\n  const mockSalaryData = {\n    employeeResults: [\n      { employeeId: 1, employeeName: 'John Doe', expectedHours: 160, actualWorkedHours: 165, monthlySalary: 5000, finalPayableSalary: 5156.25, lateMarks: 0, coefficient: 1.03 },\n      { employeeId: 2, employeeName: 'Jane Smith', expectedHours: 160, actualWorkedHours: 155, monthlySalary: 4800, finalPayableSalary: 4650, lateMarks: 1, coefficient: 0.97 },\n      { employeeId: 3, employeeName: 'Mike Johnson', expectedHours: 160, actualWorkedHours: 152, monthlySalary: 5200, finalPayableSalary: 4940, lateMarks: 2, coefficient: 0.95 },\n      { employeeId: 4, employeeName: 'Sarah Williams', expectedHours: 160, actualWorkedHours: 168, monthlySalary: 5500, finalPayableSalary: 5775, lateMarks: 0, coefficient: 1.05 },\n      { employeeId: 5, employeeName: 'David Brown', expectedHours: 160, actualWorkedHours: 140, monthlySalary: 4700, finalPayableSalary: 4112.5, lateMarks: 3, coefficient: 0.87 }\n    ]\n  };\n  \n  // Calculate metrics from salary results\n  const calculateMetrics = (results) => {\n    const totalEmployees = results.length;\n    const totalSalary = results.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n    const averageSalary = totalSalary / totalEmployees;\n    const totalLateMarks = results.reduce((sum, item) => sum + item.lateMarks, 0);\n    \n    setProcessedData({\n      totalEmployees,\n      totalSalary,\n      averageSalary,\n      totalLateMarks\n    });\n  };\n  \n  // Process demo data function\n  const processDemoData = () => {\n    setSalaryResults(mockSalaryData.employeeResults);\n    calculateMetrics(mockSalaryData.employeeResults);\n  };\n  \n  // Auto-load mock data in demo mode\n  useEffect(() => {\n    if (isDemoMode()) {\n      // Simulate loading delay\n      const timer = setTimeout(() => {\n        // Set salary results\n        setSalaryResults(mockSalaryData.employeeResults);\n        \n        // Calculate summary data for metrics\n        const totalEmployees = mockSalaryData.employeeResults.length;\n        const totalSalary = mockSalaryData.employeeResults.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n        const averageSalary = totalSalary / totalEmployees;\n        const totalLateMarks = mockSalaryData.employeeResults.reduce((sum, item) => sum + item.lateMarks, 0);\n        \n        // Set processed data with calculated metrics\n        setProcessedData({\n          totalEmployees,\n          totalSalary,\n          averageSalary,\n          totalLateMarks\n        });\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n\n  const handleProcessSalary = async () => {\n    if (!file) {\n      setError('Please upload a file first');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      // Check if we're in demo mode\n      if (isDemoMode()) {\n        await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate API delay\n        processDemoData();\n      } else {\n        const results = await salaryService.processSalary(file);\n        setSalaryResults(results);\n        \n        // Calculate summary data\n        const totalEmployees = results.length;\n        const totalSalary = results.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n        const averageSalary = totalSalary / totalEmployees;\n        const totalLateMarks = results.reduce((sum, item) => sum + item.lateMarks, 0);\n        \n        setProcessedData({\n          totalEmployees,\n          totalSalary,\n          averageSalary,\n          totalLateMarks\n        });\n      }\n    } catch (err) {\n      console.error('Error processing salary:', err);\n      setError(err.response?.data?.message || 'Error processing salary data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownloadPdf = async (employeeId) => {\n    try {\n      setLoading(true);\n      \n      // Check if we're in demo mode\n      if (isDemoMode()) {\n        await new Promise(resolve => setTimeout(resolve, 800)); // Simulate download delay\n        \n        // Generate a simple PDF with employee data in demo mode\n        const employee = salaryResults.find(emp => emp.employeeId === employeeId);\n        if (!employee) {\n          throw new Error('Employee not found');\n        }\n        \n        // Create a simple PDF using Canvas and jsPDF (we simulate this)\n        simulatePdfDownload(employee);\n      } else {\n        const response = await salaryService.generatePdf(employeeId);\n        \n        // Create blob URL\n        const blob = new Blob([response.data], { type: 'application/pdf' });\n        const url = window.URL.createObjectURL(blob);\n\n        // Create temporary link to download file\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `salary_slip_${employeeId}.pdf`);\n        document.body.appendChild(link);\n        link.click();\n\n        // Clean up\n        link.parentNode.removeChild(link);\n        window.URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      console.error('Error downloading PDF:', error);\n      setError('Error downloading PDF. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Function to handle bulk PDF download\n  const handleBulkPdfDownload = async () => {\n    if (!salaryResults || salaryResults.length === 0) {\n      setError('No salary data to download');\n      return;\n    }\n    \n    setLoading(true);\n    setError('');\n    \n    try {\n      // Check if we're in demo mode\n      if (isDemoMode()) {\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API delay\n        \n        // Create a simple text file with all employee data in demo mode\n        const textContent = salaryResults.map(employee => {\n          return `\n            SALARY SLIP - ${employee.employeeName}\n            ------------------\n            \n            Employee ID: ${employee.employeeId}\n            Name: ${employee.employeeName}\n            \n            Basic Salary: ${formatCurrency(employee.monthlySalary)}\n            Performance Coefficient: ${formatPercentage(employee.coefficient)}\n            Late Marks: ${employee.lateMarks}\n            \n            Hours Expected: ${employee.expectedHours ? employee.expectedHours.toFixed(1) : '0.0'}\n            Hours Worked: ${employee.actualWorkedHours ? employee.actualWorkedHours.toFixed(1) : '0.0'}\n            \n            Final Payable Salary: ${formatCurrency(employee.finalPayableSalary)}\n            \n            This is a demo PDF generated on ${new Date().toLocaleDateString()}\n            ==========================================\n          `;\n        }).join('\\n');\n        \n        // Create a Blob with the text content\n        const blob = new Blob([textContent], { type: 'text/plain' });\n        const url = window.URL.createObjectURL(blob);\n        \n        // Create a download link\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'all_salary_slips.txt');\n        document.body.appendChild(link);\n        link.click();\n        \n        // Clean up\n        link.parentNode.removeChild(link);\n        window.URL.revokeObjectURL(url);\n      } else {\n        // In real mode, call the bulk PDF generation API\n        await salaryService.generatePDFs(file);\n      }\n    } catch (error) {\n      console.error('Error generating bulk PDFs:', error);\n      setError('Error generating bulk PDFs. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Function to simulate PDF download in demo mode\n  const simulatePdfDownload = (employee) => {\n    // Create a text representation of what would be in the PDF\n    const pdfContent = `\n      SALARY SLIP\n      ------------------\n      \n      Employee ID: ${employee.employeeId}\n      Name: ${employee.employeeName}\n      \n      Basic Salary: ${formatCurrency(employee.monthlySalary)}\n      Performance Coefficient: ${formatPercentage(employee.coefficient)}\n      Late Marks: ${employee.lateMarks}\n      \n      Hours Expected: ${employee.expectedHours ? employee.expectedHours.toFixed(1) : '0.0'}\n      Hours Worked: ${employee.actualWorkedHours ? employee.actualWorkedHours.toFixed(1) : '0.0'}\n      \n      Final Payable Salary: ${formatCurrency(employee.finalPayableSalary)}\n      \n      This is a demo PDF generated on ${new Date().toLocaleDateString()}\n    `;\n    \n    // Create a Blob with the text content\n    const blob = new Blob([pdfContent], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    \n    // Create a download link\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', `demo_salary_slip_${employee.employeeId}.txt`);\n    document.body.appendChild(link);\n    link.click();\n    \n    // Clean up\n    link.parentNode.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  \n  // Format currency with safety check\n  const formatCurrency = (amount) => {\n    // Return 0 if amount is undefined or null\n    if (amount === undefined || amount === null) {\n      return new Intl.NumberFormat('en-IN', {\n        style: 'currency',\n        currency: 'INR',\n        minimumFractionDigits: 2\n      }).format(0);\n    }\n    \n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n  \n  // Format percentage with safety check\n  const formatPercentage = (value) => {\n    // Return 0% if value is undefined or null\n    if (value === undefined || value === null) {\n      return '0.00%';\n    }\n    \n    return (value * 100).toFixed(2) + '%';\n  };\n  \n  // Get status color based on coefficient\n  const getStatusColor = (coefficient) => {\n    // Add safety check\n    if (!coefficient) return 'warning';\n    \n    if (coefficient >= 0.95) return 'success';\n    if (coefficient >= 0.85) return 'warning';\n    return 'error';\n  };\n  \n  // Get status label based on coefficient\n  const getStatusLabel = (coefficient) => {\n    // Add safety check\n    if (!coefficient) return 'N/A';\n    \n    if (coefficient >= 0.95) return 'Excellent';\n    if (coefficient >= 0.85) return 'Good';\n    if (coefficient >= 0.75) return 'Average';\n    return 'Below Average';\n  };\n\n  return (\n    <DashboardContainer>\n      <Fade in={fadeIn} timeout={800}>\n        <Container maxWidth=\"xl\">\n          <PageHeader>\n            <Box>\n              <Typography variant=\"h4\" component=\"h1\" fontWeight=\"700\" color=\"primary.main\">\n                Salary Processor Dashboard\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\">\n                Upload, process and manage employee salary data\n              </Typography>\n            </Box>\n            \n            {processedData && (\n              <Chip \n                label={`Month: ${new Date().toLocaleString('default', { month: 'long', year: 'numeric' })}`}\n                color=\"primary\" \n                variant=\"outlined\"\n                sx={{ fontWeight: 600, borderRadius: '16px', mt: { xs: 2, md: 0 } }}\n              />\n            )}\n          </PageHeader>\n          \n          {error && (\n            <Fade in={!!error} timeout={500}>\n              <Alert \n                severity=\"error\" \n                variant=\"filled\"\n                sx={{ mb: 3, borderRadius: '12px' }}\n                onClose={() => setError('')}\n              >\n                {error}\n              </Alert>\n            </Fade>\n          )}\n          \n          <Grid container spacing={3}>\n            <Grid item xs={12} md={5} lg={4}>\n              <Zoom in={fadeIn} timeout={800}>\n                <UploadCard elevation={3}>\n                  <CardContent sx={{ p: 3 }}>\n                    <Typography variant=\"h6\" fontWeight=\"600\" gutterBottom>\n                      Upload Attendance Data\n                    </Typography>\n                    <Divider sx={{ mb: 2 }} />\n                    \n                    <FileUploadArea \n                      onClick={handleFileUploadClick}\n                      onDragOver={handleDragOver}\n                      onDragLeave={handleDragLeave}\n                      onDrop={handleDrop}\n                      isDragging={isDragging}\n                    >\n                      <input\n                        type=\"file\"\n                        accept=\".xls,.xlsx\"\n                        onChange={handleFileChange}\n                        hidden\n                        ref={fileInputRef}\n                      />\n                      \n                      <CloudUploadIcon \n                        sx={{ \n                          fontSize: 64, \n                          color: isDragging ? 'primary.main' : 'primary.light', \n                          mb: 2,\n                          transition: 'all 0.3s ease'\n                        }} \n                      />\n                      \n                      <Typography variant=\"h6\" gutterBottom color={isDragging ? 'primary.main' : 'inherit'}>\n                        {file ? file.name : 'Drag & Drop or Click to Upload'}\n                      </Typography>\n                      \n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Upload monthly attendance Excel file (.xls or .xlsx)\n                      </Typography>\n                    </FileUploadArea>\n                    \n                    <Grid container spacing={2}>\n                      <Grid item xs={12} sm={6}>\n                        <ActionButton\n                          variant=\"contained\"\n                          color=\"primary\"\n                          fullWidth\n                          onClick={handleProcessSalary}\n                          disabled={!file || loading}\n                          startIcon={loading ? <CircularProgress size={20} /> : <PlayArrowIcon />}\n                        >\n                          Process Data\n                        </ActionButton>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </UploadCard>\n              </Zoom>\n            </Grid>\n            \n            {processedData && (\n              <Grid item xs={12} md={7} lg={8}>\n                <Zoom in={!!processedData} timeout={500}>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6} lg={3}>\n                      <MetricCard color=\"primary\">\n                        <CardContent sx={{ p: 3 }}>\n                          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                            <PeopleIcon sx={{ mr: 1, opacity: 0.8 }} />\n                            <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                              Employees\n                            </Typography>\n                          </Box>\n                          <Typography variant=\"h4\" fontWeight=\"600\">\n                            {processedData.totalEmployees}\n                          </Typography>\n                        </CardContent>\n                      </MetricCard>\n                    </Grid>\n                    \n                    <Grid item xs={12} sm={6} lg={3}>\n                      <MetricCard color=\"secondary\">\n                        <CardContent sx={{ p: 3 }}>\n                          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                            <AccountBalanceWalletIcon sx={{ mr: 1, opacity: 0.8 }} />\n                            <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                              Total Payout\n                            </Typography>\n                          </Box>\n                          <Typography variant=\"h4\" fontWeight=\"600\">\n                            {formatCurrency(processedData.totalSalary)}\n                          </Typography>\n                        </CardContent>\n                      </MetricCard>\n                    </Grid>\n                    \n                    <Grid item xs={12} sm={6} lg={3}>\n                      <MetricCard color=\"success\">\n                        <CardContent sx={{ p: 3 }}>\n                          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                            <TrendingUpIcon sx={{ mr: 1, opacity: 0.8 }} />\n                            <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                              Average Salary\n                            </Typography>\n                          </Box>\n                          <Typography variant=\"h4\" fontWeight=\"600\">\n                            {formatCurrency(processedData.averageSalary)}\n                          </Typography>\n                        </CardContent>\n                      </MetricCard>\n                    </Grid>\n                    \n                    <Grid item xs={12} sm={6} lg={3}>\n                      <MetricCard color=\"warning\">\n                        <CardContent sx={{ p: 3 }}>\n                          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                            <AccessTimeIcon sx={{ mr: 1, opacity: 0.8 }} />\n                            <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                              Late Marks\n                            </Typography>\n                          </Box>\n                          <Typography variant=\"h4\" fontWeight=\"600\">\n                            {processedData.totalLateMarks}\n                          </Typography>\n                        </CardContent>\n                      </MetricCard>\n                    </Grid>\n                  </Grid>\n                </Zoom>\n              </Grid>\n            )}\n          </Grid>\n          \n          {salaryResults.length > 0 && (\n            <Fade in={salaryResults.length > 0} timeout={1000}>\n              <Box sx={{ mt: 4 }}>\n                <Typography variant=\"h5\" fontWeight=\"600\" color=\"text.primary\" gutterBottom>\n                  Salary Results\n                </Typography>\n                <StyledTableContainer component={Paper}>\n                  <Table aria-label=\"salary results table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Employee ID</TableCell>\n                        <TableCell>Name</TableCell>\n                        <TableCell align=\"right\">Monthly Salary</TableCell>\n                        <TableCell align=\"right\">Hours (Expected/Actual)</TableCell>\n                        <TableCell align=\"right\">Coefficient</TableCell>\n                        <TableCell align=\"right\">Late Marks</TableCell>\n                        <TableCell align=\"right\">Final Salary</TableCell>\n                        <TableCell align=\"center\">Status</TableCell>\n                        <TableCell align=\"center\">Actions</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {salaryResults.map((row) => {\n                        const statusColor = getStatusColor(row.coefficient);\n                        \n                        return (\n                          <TableRow key={row.employeeId}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.employeeId}\n                            </TableCell>\n                            <TableCell>\n                              <Typography fontWeight=\"500\">{row.employeeName}</Typography>\n                            </TableCell>\n                            <TableCell align=\"right\">{formatCurrency(row.monthlySalary)}</TableCell>\n                            <TableCell align=\"right\">\n                              <Tooltip title={`Expected: ${row.expectedHours ? row.expectedHours.toFixed(1) : '0.0'}, Actual: ${row.actualWorkedHours ? row.actualWorkedHours.toFixed(1) : '0.0'}`}>\n                                <span>{row.actualWorkedHours ? row.actualWorkedHours.toFixed(1) : '0.0'} / {row.expectedHours ? row.expectedHours.toFixed(1) : '0.0'}</span>\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                              <Typography fontWeight=\"500\" color={`${statusColor}.main`}>\n                                {formatPercentage(row.coefficient)}\n                              </Typography>\n                            </TableCell>\n                            <TableCell align=\"right\">{row.lateMarks}</TableCell>\n                            <TableCell align=\"right\">\n                              <Typography fontWeight=\"700\">\n                                {formatCurrency(row.finalPayableSalary)}\n                              </Typography>\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Chip \n                                label={getStatusLabel(row.coefficient)}\n                                color={statusColor}\n                                size=\"small\"\n                                sx={{ fontWeight: 500 }}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <ActionButton\n                                size=\"small\"\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={() => handleDownloadPdf(row.employeeId)}\n                                disabled={loading}\n                                startIcon={<DownloadIcon />}\n                              >\n                                PDF\n                              </ActionButton>\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                    </TableBody>\n                  </Table>\n                </StyledTableContainer>\n              </Box>\n            </Fade>\n          )}\n        </Container>\n      </Fade>\n    </DashboardContainer>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}