{"ast":null,"code":"var _jsxFileName = \"/Users/vsalokhe/CascadeProjects/salary-processor-frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Box, Typography, Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Alert, CircularProgress, Grid, Card, CardContent, Container, Divider, Chip, Tooltip, Fade, Zoom, useTheme } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport PeopleIcon from '@mui/icons-material/People';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport { salaryService } from '../services/api';\nimport { isDemoMode } from '../context/AuthContext';\n\n// Styled components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled(Box)(({\n  theme\n}) => ({\n  minHeight: 'calc(100vh - 64px)',\n  background: 'linear-gradient(135deg, rgba(25, 118, 210, 0.05) 0%, rgba(156, 39, 176, 0.05) 100%)',\n  padding: theme.spacing(3)\n}));\n_c = DashboardContainer;\nconst PageHeader = styled(Box)(({\n  theme\n}) => ({\n  marginBottom: theme.spacing(4),\n  display: 'flex',\n  flexDirection: 'column',\n  [theme.breakpoints.up('md')]: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n}));\n_c2 = PageHeader;\nconst StyledCard = styled(Card)(({\n  theme\n}) => ({\n  borderRadius: '16px',\n  boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\n  height: '100%',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    transform: 'translateY(-5px)',\n    boxShadow: '0 12px 40px rgba(0, 0, 0, 0.15)'\n  }\n}));\nconst MetricCard = styled(StyledCard)(({\n  theme,\n  color = 'primary'\n}) => ({\n  background: `linear-gradient(135deg, ${theme.palette[color].light} 0%, ${theme.palette[color].main} 100%)`,\n  color: 'white'\n}));\n_c3 = MetricCard;\nconst UploadCard = styled(StyledCard)(({\n  theme\n}) => ({\n  background: 'white',\n  overflow: 'hidden',\n  position: 'relative',\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    width: '30%',\n    height: '30%',\n    background: 'linear-gradient(135deg, transparent 0%, rgba(25, 118, 210, 0.05) 100%)',\n    borderTopLeftRadius: '50%'\n  }\n}));\n_c4 = UploadCard;\nconst FileUploadArea = styled(Box)(({\n  theme,\n  isDragging\n}) => ({\n  border: `2px dashed ${isDragging ? theme.palette.primary.main : '#ccc'}`,\n  borderRadius: '12px',\n  padding: theme.spacing(4),\n  textAlign: 'center',\n  backgroundColor: isDragging ? 'rgba(25, 118, 210, 0.05)' : '#f9f9f9',\n  margin: theme.spacing(2, 0, 3),\n  cursor: 'pointer',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    borderColor: theme.palette.primary.main,\n    backgroundColor: 'rgba(25, 118, 210, 0.05)'\n  }\n}));\n_c5 = FileUploadArea;\nconst ActionButton = styled(Button)(({\n  theme\n}) => ({\n  borderRadius: '28px',\n  padding: theme.spacing(1.2, 3),\n  textTransform: 'none',\n  fontWeight: 600,\n  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    transform: 'translateY(-2px)',\n    boxShadow: '0 6px 16px rgba(0, 0, 0, 0.15)'\n  }\n}));\n_c6 = ActionButton;\nconst StyledTableContainer = styled(TableContainer)(({\n  theme\n}) => ({\n  borderRadius: '12px',\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.08)',\n  '.MuiTableCell-head': {\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n    fontWeight: 600\n  },\n  '.MuiTableRow-root': {\n    '&:nth-of-type(odd)': {\n      backgroundColor: 'rgba(0, 0, 0, 0.02)'\n    },\n    '&:hover': {\n      backgroundColor: 'rgba(25, 118, 210, 0.05)'\n    }\n  }\n}));\n_c7 = StyledTableContainer;\nconst Dashboard = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [salaryResults, setSalaryResults] = useState([]);\n  const [processedData, setProcessedData] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [fadeIn, setFadeIn] = useState(false);\n  const fileInputRef = useRef(null);\n  const theme = useTheme();\n  useEffect(() => {\n    // Trigger fade-in animation after component mounts\n    setFadeIn(true);\n  }, []);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      // Check if the file is an Excel file\n      if (!selectedFile.name.endsWith('.xls') && !selectedFile.name.endsWith('.xlsx')) {\n        setError('Please upload an Excel file (.xls or .xlsx)');\n        setFile(null);\n        return;\n      }\n      setError('');\n      setFile(selectedFile);\n    }\n  };\n  const handleFileUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  // Drag and drop handlers\n  const handleDragOver = e => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    setIsDragging(false);\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const droppedFile = e.dataTransfer.files[0];\n\n      // Check if the file is an Excel file\n      if (!droppedFile.name.endsWith('.xls') && !droppedFile.name.endsWith('.xlsx')) {\n        setError('Please upload an Excel file (.xls or .xlsx)');\n        return;\n      }\n      setError('');\n      setFile(droppedFile);\n    }\n  };\n\n  // Mock data for demo mode\n  const mockSalaryData = {\n    employeeResults: [{\n      id: 1,\n      name: 'John Doe',\n      expectedHours: 160,\n      actualWorkedHours: 165,\n      baseSalary: 5000,\n      finalPayableSalary: 5156.25,\n      lateMarks: 0,\n      performanceCoefficient: 1.03\n    }, {\n      id: 2,\n      name: 'Jane Smith',\n      expectedHours: 160,\n      actualWorkedHours: 155,\n      baseSalary: 4800,\n      finalPayableSalary: 4650,\n      lateMarks: 1,\n      performanceCoefficient: 0.97\n    }, {\n      id: 3,\n      name: 'Mike Johnson',\n      expectedHours: 160,\n      actualWorkedHours: 152,\n      baseSalary: 5200,\n      finalPayableSalary: 4940,\n      lateMarks: 2,\n      performanceCoefficient: 0.95\n    }, {\n      id: 4,\n      name: 'Sarah Williams',\n      expectedHours: 160,\n      actualWorkedHours: 168,\n      baseSalary: 5500,\n      finalPayableSalary: 5775,\n      lateMarks: 0,\n      performanceCoefficient: 1.05\n    }, {\n      id: 5,\n      name: 'David Brown',\n      expectedHours: 160,\n      actualWorkedHours: 140,\n      baseSalary: 4700,\n      finalPayableSalary: 4112.5,\n      lateMarks: 3,\n      performanceCoefficient: 0.87\n    }]\n  };\n\n  // Auto-load mock data in demo mode\n  useEffect(() => {\n    if (isDemoMode()) {\n      // Simulate loading delay\n      const timer = setTimeout(() => {\n        // Set salary results\n        setSalaryResults(mockSalaryData.employeeResults);\n\n        // Calculate summary data for metrics\n        const totalEmployees = mockSalaryData.employeeResults.length;\n        const totalSalary = mockSalaryData.employeeResults.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n        const averageSalary = totalSalary / totalEmployees;\n        const totalLateMarks = mockSalaryData.employeeResults.reduce((sum, item) => sum + item.lateMarks, 0);\n\n        // Set processed data with calculated metrics\n        setProcessedData({\n          totalEmployees,\n          totalSalary,\n          averageSalary,\n          totalLateMarks\n        });\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n  const handleProcessSalary = async () => {\n    if (!file && !isDemoMode()) {\n      setError('Please select a file first');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError('');\n\n      // Process salary data\n      if (isDemoMode()) {\n        // Use mock data in demo mode\n        setTimeout(() => {\n          // Set salary results\n          setSalaryResults(mockSalaryData.employeeResults);\n\n          // Calculate summary data for metrics\n          const totalEmployees = mockSalaryData.employeeResults.length;\n          const totalSalary = mockSalaryData.employeeResults.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n          const averageSalary = totalSalary / totalEmployees;\n          const totalLateMarks = mockSalaryData.employeeResults.reduce((sum, item) => sum + item.lateMarks, 0);\n\n          // Set processed data with calculated metrics\n          setProcessedData({\n            totalEmployees,\n            totalSalary,\n            averageSalary,\n            totalLateMarks\n          });\n          setLoading(false);\n        }, 1500); // Simulate API delay\n      } else {\n        // Normal mode - call the API\n        const results = await salaryService.processSalary(file);\n        setSalaryResults(results);\n\n        // Calculate summary data\n        const totalEmployees = results.length;\n        const totalSalary = results.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n        const averageSalary = totalSalary / totalEmployees;\n        const totalLateMarks = results.reduce((sum, item) => sum + item.lateMarks, 0);\n        setProcessedData({\n          totalEmployees,\n          totalSalary,\n          averageSalary,\n          totalLateMarks\n        });\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error processing salary:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to process salary data. Please check your file format.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownloadPDFs = async () => {\n    if (!file && !isDemoMode()) {\n      setError('Please select a file first');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError('');\n\n      // Generate and download PDF salary slips\n      if (isDemoMode()) {\n        // Use mock data in demo mode\n        setTimeout(() => {\n          setLoading(false);\n        }, 1500); // Simulate API delay\n      } else {\n        // Normal mode - call the API\n        await salaryService.generatePDFs(file);\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Error generating PDFs:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to generate PDF salary slips. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format currency with safety check\n  const formatCurrency = amount => {\n    // Return 0 if amount is undefined or null\n    if (amount === undefined || amount === null) {\n      return new Intl.NumberFormat('en-IN', {\n        style: 'currency',\n        currency: 'INR',\n        minimumFractionDigits: 2\n      }).format(0);\n    }\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n\n  // Format percentage with safety check\n  const formatPercentage = value => {\n    // Return 0% if value is undefined or null\n    if (value === undefined || value === null) {\n      return '0.00%';\n    }\n    return (value * 100).toFixed(2) + '%';\n  };\n\n  // Get status color based on coefficient\n  const getStatusColor = coefficient => {\n    if (coefficient >= 0.95) return 'success';\n    if (coefficient >= 0.85) return 'warning';\n    return 'error';\n  };\n\n  // Get status label based on coefficient\n  const getStatusLabel = coefficient => {\n    if (coefficient >= 0.95) return 'Excellent';\n    if (coefficient >= 0.85) return 'Good';\n    if (coefficient >= 0.75) return 'Average';\n    return 'Below Average';\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    children: /*#__PURE__*/_jsxDEV(Fade, {\n      in: fadeIn,\n      timeout: 800,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h1\",\n              fontWeight: \"700\",\n              color: \"primary.main\",\n              children: \"Salary Processor Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: \"Upload, process and manage employee salary data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), processedData && /*#__PURE__*/_jsxDEV(Chip, {\n            label: `Month: ${new Date().toLocaleString('default', {\n              month: 'long',\n              year: 'numeric'\n            })}`,\n            color: \"primary\",\n            variant: \"outlined\",\n            sx: {\n              fontWeight: 600,\n              borderRadius: '16px',\n              mt: {\n                xs: 2,\n                md: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Fade, {\n          in: !!error,\n          timeout: 500,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            variant: \"filled\",\n            sx: {\n              mb: 3,\n              borderRadius: '12px'\n            },\n            onClose: () => setError(''),\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 5,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Zoom, {\n              in: fadeIn,\n              timeout: 800,\n              children: /*#__PURE__*/_jsxDEV(UploadCard, {\n                elevation: 3,\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  sx: {\n                    p: 3\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    fontWeight: \"600\",\n                    gutterBottom: true,\n                    children: \"Upload Attendance Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                    sx: {\n                      mb: 2\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FileUploadArea, {\n                    onClick: handleFileUploadClick,\n                    onDragOver: handleDragOver,\n                    onDragLeave: handleDragLeave,\n                    onDrop: handleDrop,\n                    isDragging: isDragging,\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      accept: \".xls,.xlsx\",\n                      onChange: handleFileChange,\n                      hidden: true,\n                      ref: fileInputRef\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 430,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                      sx: {\n                        fontSize: 64,\n                        color: isDragging ? 'primary.main' : 'primary.light',\n                        mb: 2,\n                        transition: 'all 0.3s ease'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      gutterBottom: true,\n                      color: isDragging ? 'primary.main' : 'inherit',\n                      children: file ? file.name : 'Drag & Drop or Click to Upload'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: \"Upload monthly attendance Excel file (.xls or .xlsx)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      sm: 6,\n                      children: /*#__PURE__*/_jsxDEV(ActionButton, {\n                        variant: \"contained\",\n                        color: \"primary\",\n                        fullWidth: true,\n                        onClick: handleProcessSalary,\n                        disabled: !file || loading,\n                        startIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                          size: 20\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 464,\n                          columnNumber: 48\n                        }, this) : /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 464,\n                          columnNumber: 81\n                        }, this),\n                        children: \"Process Data\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 458,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 457,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      sm: 6,\n                      children: /*#__PURE__*/_jsxDEV(ActionButton, {\n                        variant: \"outlined\",\n                        color: \"primary\",\n                        fullWidth: true,\n                        onClick: handleDownloadPDFs,\n                        disabled: !file || loading,\n                        startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 477,\n                          columnNumber: 38\n                        }, this),\n                        children: \"Download PDFs\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 471,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), processedData && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 7,\n            lg: 8,\n            children: /*#__PURE__*/_jsxDEV(Zoom, {\n              in: !!processedData,\n              timeout: 500,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  lg: 3,\n                  children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                    color: \"primary\",\n                    children: /*#__PURE__*/_jsxDEV(CardContent, {\n                      sx: {\n                        p: 3\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        mb: 1,\n                        children: [/*#__PURE__*/_jsxDEV(PeopleIcon, {\n                          sx: {\n                            mr: 1,\n                            opacity: 0.8\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 496,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          sx: {\n                            opacity: 0.8\n                          },\n                          children: \"Employees\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 497,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 495,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h4\",\n                        fontWeight: \"600\",\n                        children: processedData.totalEmployees\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  lg: 3,\n                  children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                    color: \"secondary\",\n                    children: /*#__PURE__*/_jsxDEV(CardContent, {\n                      sx: {\n                        p: 3\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        mb: 1,\n                        children: [/*#__PURE__*/_jsxDEV(AccountBalanceWalletIcon, {\n                          sx: {\n                            mr: 1,\n                            opacity: 0.8\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 512,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          sx: {\n                            opacity: 0.8\n                          },\n                          children: \"Total Payout\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 513,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 511,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h4\",\n                        fontWeight: \"600\",\n                        children: formatCurrency(processedData.totalSalary)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 517,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 510,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  lg: 3,\n                  children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                    color: \"success\",\n                    children: /*#__PURE__*/_jsxDEV(CardContent, {\n                      sx: {\n                        p: 3\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        mb: 1,\n                        children: [/*#__PURE__*/_jsxDEV(TrendingUpIcon, {\n                          sx: {\n                            mr: 1,\n                            opacity: 0.8\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 528,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          sx: {\n                            opacity: 0.8\n                          },\n                          children: \"Average Salary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 529,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 527,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h4\",\n                        fontWeight: \"600\",\n                        children: formatCurrency(processedData.averageSalary)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 533,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  lg: 3,\n                  children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                    color: \"warning\",\n                    children: /*#__PURE__*/_jsxDEV(CardContent, {\n                      sx: {\n                        p: 3\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        mb: 1,\n                        children: [/*#__PURE__*/_jsxDEV(AccessTimeIcon, {\n                          sx: {\n                            mr: 1,\n                            opacity: 0.8\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 544,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          sx: {\n                            opacity: 0.8\n                          },\n                          children: \"Late Marks\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 545,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 543,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h4\",\n                        fontWeight: \"600\",\n                        children: processedData.totalLateMarks\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 549,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 542,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), salaryResults.length > 0 && /*#__PURE__*/_jsxDEV(Fade, {\n          in: salaryResults.length > 0,\n          timeout: 1000,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              fontWeight: \"600\",\n              color: \"text.primary\",\n              gutterBottom: true,\n              children: \"Salary Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableContainer, {\n              component: Paper,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                \"aria-label\": \"salary results table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Employee ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 572,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Monthly Salary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 573,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Hours (Expected/Actual)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 574,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Coefficient\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 575,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Late Marks\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 576,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Final Salary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 577,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 578,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: salaryResults.map(row => {\n                    const statusColor = getStatusColor(row.coefficient);\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        component: \"th\",\n                        scope: \"row\",\n                        children: row.employeeId\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 587,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          fontWeight: \"500\",\n                          children: row.employeeName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 591,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 590,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: formatCurrency(row.monthlySalary)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 593,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                          title: `Expected: ${row.expectedHours ? row.expectedHours.toFixed(1) : '0.0'}, Actual: ${row.actualWorkedHours ? row.actualWorkedHours.toFixed(1) : '0.0'}`,\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: [row.actualWorkedHours ? row.actualWorkedHours.toFixed(1) : '0.0', \" / \", row.expectedHours ? row.expectedHours.toFixed(1) : '0.0']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 596,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 595,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 594,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          fontWeight: \"500\",\n                          color: `${statusColor}.main`,\n                          children: formatPercentage(row.coefficient)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 600,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 599,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: row.lateMarks\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 604,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          fontWeight: \"700\",\n                          children: formatCurrency(row.finalPayableSalary)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 606,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 605,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: /*#__PURE__*/_jsxDEV(Chip, {\n                          label: getStatusLabel(row.coefficient),\n                          color: statusColor,\n                          size: \"small\",\n                          sx: {\n                            fontWeight: 500\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 611,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 610,\n                        columnNumber: 29\n                      }, this)]\n                    }, row.employeeId, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 586,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"V5i49ECcmNg/GYZH9no9DDb4aJc=\", false, function () {\n  return [useTheme];\n});\n_c8 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"PageHeader\");\n$RefreshReg$(_c3, \"MetricCard\");\n$RefreshReg$(_c4, \"UploadCard\");\n$RefreshReg$(_c5, \"FileUploadArea\");\n$RefreshReg$(_c6, \"ActionButton\");\n$RefreshReg$(_c7, \"StyledTableContainer\");\n$RefreshReg$(_c8, \"Dashboard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","Box","Typography","Button","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Alert","CircularProgress","Grid","Card","CardContent","Container","Divider","Chip","Tooltip","Fade","Zoom","useTheme","styled","CloudUploadIcon","DownloadIcon","PlayArrowIcon","PeopleIcon","AccountBalanceWalletIcon","TrendingUpIcon","AccessTimeIcon","salaryService","isDemoMode","jsxDEV","_jsxDEV","DashboardContainer","theme","minHeight","background","padding","spacing","_c","PageHeader","marginBottom","display","flexDirection","breakpoints","up","justifyContent","alignItems","_c2","StyledCard","borderRadius","boxShadow","height","transition","transform","MetricCard","color","palette","light","main","_c3","UploadCard","overflow","position","content","bottom","right","width","borderTopLeftRadius","_c4","FileUploadArea","isDragging","border","primary","textAlign","backgroundColor","margin","cursor","borderColor","_c5","ActionButton","textTransform","fontWeight","_c6","StyledTableContainer","_c7","Dashboard","_s","file","setFile","error","setError","loading","setLoading","salaryResults","setSalaryResults","processedData","setProcessedData","setIsDragging","fadeIn","setFadeIn","fileInputRef","handleFileChange","e","selectedFile","target","files","name","endsWith","handleFileUploadClick","current","click","handleDragOver","preventDefault","handleDragLeave","handleDrop","dataTransfer","length","droppedFile","mockSalaryData","employeeResults","id","expectedHours","actualWorkedHours","baseSalary","finalPayableSalary","lateMarks","performanceCoefficient","timer","setTimeout","totalEmployees","totalSalary","reduce","sum","item","averageSalary","totalLateMarks","clearTimeout","handleProcessSalary","results","processSalary","err","_err$response","_err$response$data","console","response","data","message","handleDownloadPDFs","generatePDFs","_err$response2","_err$response2$data","formatCurrency","amount","undefined","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formatPercentage","value","toFixed","getStatusColor","coefficient","getStatusLabel","children","in","timeout","maxWidth","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","label","Date","toLocaleString","month","year","sx","mt","xs","md","severity","mb","onClose","container","lg","elevation","p","gutterBottom","onClick","onDragOver","onDragLeave","onDrop","type","accept","onChange","hidden","ref","fontSize","sm","fullWidth","disabled","startIcon","size","mr","opacity","align","map","row","statusColor","scope","employeeId","employeeName","monthlySalary","title","_c8","$RefreshReg$"],"sources":["/Users/vsalokhe/CascadeProjects/salary-processor-frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { \n  Box, \n  Typography, \n  Button, \n  Paper, \n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Alert,\n  CircularProgress,\n  Grid,\n  Card,\n  CardContent,\n  Container,\n  Divider,\n  Chip,\n  Tooltip,\n  Fade,\n  Zoom,\n  useTheme\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport PeopleIcon from '@mui/icons-material/People';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport { salaryService } from '../services/api';\nimport { isDemoMode } from '../context/AuthContext';\n\n// Styled components\nconst DashboardContainer = styled(Box)(({ theme }) => ({\n  minHeight: 'calc(100vh - 64px)',\n  background: 'linear-gradient(135deg, rgba(25, 118, 210, 0.05) 0%, rgba(156, 39, 176, 0.05) 100%)',\n  padding: theme.spacing(3),\n}));\n\nconst PageHeader = styled(Box)(({ theme }) => ({\n  marginBottom: theme.spacing(4),\n  display: 'flex',\n  flexDirection: 'column',\n  [theme.breakpoints.up('md')]: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  borderRadius: '16px',\n  boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\n  height: '100%',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    transform: 'translateY(-5px)',\n    boxShadow: '0 12px 40px rgba(0, 0, 0, 0.15)',\n  },\n}));\n\nconst MetricCard = styled(StyledCard)(({ theme, color = 'primary' }) => ({\n  background: `linear-gradient(135deg, ${theme.palette[color].light} 0%, ${theme.palette[color].main} 100%)`,\n  color: 'white',\n}));\n\nconst UploadCard = styled(StyledCard)(({ theme }) => ({\n  background: 'white',\n  overflow: 'hidden',\n  position: 'relative',\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    width: '30%',\n    height: '30%',\n    background: 'linear-gradient(135deg, transparent 0%, rgba(25, 118, 210, 0.05) 100%)',\n    borderTopLeftRadius: '50%',\n  },\n}));\n\nconst FileUploadArea = styled(Box)(({ theme, isDragging }) => ({\n  border: `2px dashed ${isDragging ? theme.palette.primary.main : '#ccc'}`,\n  borderRadius: '12px',\n  padding: theme.spacing(4),\n  textAlign: 'center',\n  backgroundColor: isDragging ? 'rgba(25, 118, 210, 0.05)' : '#f9f9f9',\n  margin: theme.spacing(2, 0, 3),\n  cursor: 'pointer',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    borderColor: theme.palette.primary.main,\n    backgroundColor: 'rgba(25, 118, 210, 0.05)',\n  },\n}));\n\nconst ActionButton = styled(Button)(({ theme }) => ({\n  borderRadius: '28px',\n  padding: theme.spacing(1.2, 3),\n  textTransform: 'none',\n  fontWeight: 600,\n  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    transform: 'translateY(-2px)',\n    boxShadow: '0 6px 16px rgba(0, 0, 0, 0.15)',\n  },\n}));\n\nconst StyledTableContainer = styled(TableContainer)(({ theme }) => ({\n  borderRadius: '12px',\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.08)',\n  '.MuiTableCell-head': {\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n    fontWeight: 600,\n  },\n  '.MuiTableRow-root': {\n    '&:nth-of-type(odd)': {\n      backgroundColor: 'rgba(0, 0, 0, 0.02)',\n    },\n    '&:hover': {\n      backgroundColor: 'rgba(25, 118, 210, 0.05)',\n    },\n  },\n}));\n\nconst Dashboard = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [salaryResults, setSalaryResults] = useState([]);\n  const [processedData, setProcessedData] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [fadeIn, setFadeIn] = useState(false);\n  const fileInputRef = useRef(null);\n  const theme = useTheme();\n  \n  useEffect(() => {\n    // Trigger fade-in animation after component mounts\n    setFadeIn(true);\n  }, []);\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      // Check if the file is an Excel file\n      if (\n        !selectedFile.name.endsWith('.xls') && \n        !selectedFile.name.endsWith('.xlsx')\n      ) {\n        setError('Please upload an Excel file (.xls or .xlsx)');\n        setFile(null);\n        return;\n      }\n      \n      setError('');\n      setFile(selectedFile);\n    }\n  };\n\n  const handleFileUploadClick = () => {\n    fileInputRef.current.click();\n  };\n  \n  // Drag and drop handlers\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  \n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n  \n  const handleDrop = (e) => {\n    e.preventDefault();\n    setIsDragging(false);\n    \n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const droppedFile = e.dataTransfer.files[0];\n      \n      // Check if the file is an Excel file\n      if (\n        !droppedFile.name.endsWith('.xls') && \n        !droppedFile.name.endsWith('.xlsx')\n      ) {\n        setError('Please upload an Excel file (.xls or .xlsx)');\n        return;\n      }\n      \n      setError('');\n      setFile(droppedFile);\n    }\n  };\n\n  // Mock data for demo mode\n  const mockSalaryData = {\n    employeeResults: [\n      { id: 1, name: 'John Doe', expectedHours: 160, actualWorkedHours: 165, baseSalary: 5000, finalPayableSalary: 5156.25, lateMarks: 0, performanceCoefficient: 1.03 },\n      { id: 2, name: 'Jane Smith', expectedHours: 160, actualWorkedHours: 155, baseSalary: 4800, finalPayableSalary: 4650, lateMarks: 1, performanceCoefficient: 0.97 },\n      { id: 3, name: 'Mike Johnson', expectedHours: 160, actualWorkedHours: 152, baseSalary: 5200, finalPayableSalary: 4940, lateMarks: 2, performanceCoefficient: 0.95 },\n      { id: 4, name: 'Sarah Williams', expectedHours: 160, actualWorkedHours: 168, baseSalary: 5500, finalPayableSalary: 5775, lateMarks: 0, performanceCoefficient: 1.05 },\n      { id: 5, name: 'David Brown', expectedHours: 160, actualWorkedHours: 140, baseSalary: 4700, finalPayableSalary: 4112.5, lateMarks: 3, performanceCoefficient: 0.87 }\n    ]\n  };\n  \n  // Auto-load mock data in demo mode\n  useEffect(() => {\n    if (isDemoMode()) {\n      // Simulate loading delay\n      const timer = setTimeout(() => {\n        // Set salary results\n        setSalaryResults(mockSalaryData.employeeResults);\n        \n        // Calculate summary data for metrics\n        const totalEmployees = mockSalaryData.employeeResults.length;\n        const totalSalary = mockSalaryData.employeeResults.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n        const averageSalary = totalSalary / totalEmployees;\n        const totalLateMarks = mockSalaryData.employeeResults.reduce((sum, item) => sum + item.lateMarks, 0);\n        \n        // Set processed data with calculated metrics\n        setProcessedData({\n          totalEmployees,\n          totalSalary,\n          averageSalary,\n          totalLateMarks\n        });\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n\n  const handleProcessSalary = async () => {\n    if (!file && !isDemoMode()) {\n      setError('Please select a file first');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError('');\n      \n      // Process salary data\n      if (isDemoMode()) {\n        // Use mock data in demo mode\n        setTimeout(() => {\n          // Set salary results\n          setSalaryResults(mockSalaryData.employeeResults);\n          \n          // Calculate summary data for metrics\n          const totalEmployees = mockSalaryData.employeeResults.length;\n          const totalSalary = mockSalaryData.employeeResults.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n          const averageSalary = totalSalary / totalEmployees;\n          const totalLateMarks = mockSalaryData.employeeResults.reduce((sum, item) => sum + item.lateMarks, 0);\n          \n          // Set processed data with calculated metrics\n          setProcessedData({\n            totalEmployees,\n            totalSalary,\n            averageSalary,\n            totalLateMarks\n          });\n          setLoading(false);\n        }, 1500); // Simulate API delay\n      } else {\n        // Normal mode - call the API\n        const results = await salaryService.processSalary(file);\n        setSalaryResults(results);\n        \n        // Calculate summary data\n        const totalEmployees = results.length;\n        const totalSalary = results.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n        const averageSalary = totalSalary / totalEmployees;\n        const totalLateMarks = results.reduce((sum, item) => sum + item.lateMarks, 0);\n        \n        setProcessedData({\n          totalEmployees,\n          totalSalary,\n          averageSalary,\n          totalLateMarks\n        });\n      }\n      \n    } catch (err) {\n      console.error('Error processing salary:', err);\n      setError(\n        err.response?.data?.message || \n        'Failed to process salary data. Please check your file format.'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownloadPDFs = async () => {\n    if (!file && !isDemoMode()) {\n      setError('Please select a file first');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError('');\n      \n      // Generate and download PDF salary slips\n      if (isDemoMode()) {\n        // Use mock data in demo mode\n        setTimeout(() => {\n          setLoading(false);\n        }, 1500); // Simulate API delay\n      } else {\n        // Normal mode - call the API\n        await salaryService.generatePDFs(file);\n      }\n      \n    } catch (err) {\n      console.error('Error generating PDFs:', err);\n      setError(\n        err.response?.data?.message || \n        'Failed to generate PDF salary slips. Please try again.'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Format currency with safety check\n  const formatCurrency = (amount) => {\n    // Return 0 if amount is undefined or null\n    if (amount === undefined || amount === null) {\n      return new Intl.NumberFormat('en-IN', {\n        style: 'currency',\n        currency: 'INR',\n        minimumFractionDigits: 2\n      }).format(0);\n    }\n    \n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n  \n  // Format percentage with safety check\n  const formatPercentage = (value) => {\n    // Return 0% if value is undefined or null\n    if (value === undefined || value === null) {\n      return '0.00%';\n    }\n    \n    return (value * 100).toFixed(2) + '%';\n  };\n  \n  // Get status color based on coefficient\n  const getStatusColor = (coefficient) => {\n    if (coefficient >= 0.95) return 'success';\n    if (coefficient >= 0.85) return 'warning';\n    return 'error';\n  };\n  \n  // Get status label based on coefficient\n  const getStatusLabel = (coefficient) => {\n    if (coefficient >= 0.95) return 'Excellent';\n    if (coefficient >= 0.85) return 'Good';\n    if (coefficient >= 0.75) return 'Average';\n    return 'Below Average';\n  };\n\n  return (\n    <DashboardContainer>\n      <Fade in={fadeIn} timeout={800}>\n        <Container maxWidth=\"xl\">\n          <PageHeader>\n            <Box>\n              <Typography variant=\"h4\" component=\"h1\" fontWeight=\"700\" color=\"primary.main\">\n                Salary Processor Dashboard\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\">\n                Upload, process and manage employee salary data\n              </Typography>\n            </Box>\n            \n            {processedData && (\n              <Chip \n                label={`Month: ${new Date().toLocaleString('default', { month: 'long', year: 'numeric' })}`}\n                color=\"primary\" \n                variant=\"outlined\"\n                sx={{ fontWeight: 600, borderRadius: '16px', mt: { xs: 2, md: 0 } }}\n              />\n            )}\n          </PageHeader>\n          \n          {error && (\n            <Fade in={!!error} timeout={500}>\n              <Alert \n                severity=\"error\" \n                variant=\"filled\"\n                sx={{ mb: 3, borderRadius: '12px' }}\n                onClose={() => setError('')}\n              >\n                {error}\n              </Alert>\n            </Fade>\n          )}\n          \n          <Grid container spacing={3}>\n            <Grid item xs={12} md={5} lg={4}>\n              <Zoom in={fadeIn} timeout={800}>\n                <UploadCard elevation={3}>\n                  <CardContent sx={{ p: 3 }}>\n                    <Typography variant=\"h6\" fontWeight=\"600\" gutterBottom>\n                      Upload Attendance Data\n                    </Typography>\n                    <Divider sx={{ mb: 2 }} />\n                    \n                    <FileUploadArea \n                      onClick={handleFileUploadClick}\n                      onDragOver={handleDragOver}\n                      onDragLeave={handleDragLeave}\n                      onDrop={handleDrop}\n                      isDragging={isDragging}\n                    >\n                      <input\n                        type=\"file\"\n                        accept=\".xls,.xlsx\"\n                        onChange={handleFileChange}\n                        hidden\n                        ref={fileInputRef}\n                      />\n                      \n                      <CloudUploadIcon \n                        sx={{ \n                          fontSize: 64, \n                          color: isDragging ? 'primary.main' : 'primary.light', \n                          mb: 2,\n                          transition: 'all 0.3s ease'\n                        }} \n                      />\n                      \n                      <Typography variant=\"h6\" gutterBottom color={isDragging ? 'primary.main' : 'inherit'}>\n                        {file ? file.name : 'Drag & Drop or Click to Upload'}\n                      </Typography>\n                      \n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Upload monthly attendance Excel file (.xls or .xlsx)\n                      </Typography>\n                    </FileUploadArea>\n                    \n                    <Grid container spacing={2}>\n                      <Grid item xs={12} sm={6}>\n                        <ActionButton\n                          variant=\"contained\"\n                          color=\"primary\"\n                          fullWidth\n                          onClick={handleProcessSalary}\n                          disabled={!file || loading}\n                          startIcon={loading ? <CircularProgress size={20} /> : <PlayArrowIcon />}\n                        >\n                          Process Data\n                        </ActionButton>\n                      </Grid>\n                      \n                      <Grid item xs={12} sm={6}>\n                        <ActionButton\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          fullWidth\n                          onClick={handleDownloadPDFs}\n                          disabled={!file || loading}\n                          startIcon={<DownloadIcon />}\n                        >\n                          Download PDFs\n                        </ActionButton>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </UploadCard>\n              </Zoom>\n            </Grid>\n            \n            {processedData && (\n              <Grid item xs={12} md={7} lg={8}>\n                <Zoom in={!!processedData} timeout={500}>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6} lg={3}>\n                      <MetricCard color=\"primary\">\n                        <CardContent sx={{ p: 3 }}>\n                          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                            <PeopleIcon sx={{ mr: 1, opacity: 0.8 }} />\n                            <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                              Employees\n                            </Typography>\n                          </Box>\n                          <Typography variant=\"h4\" fontWeight=\"600\">\n                            {processedData.totalEmployees}\n                          </Typography>\n                        </CardContent>\n                      </MetricCard>\n                    </Grid>\n                    \n                    <Grid item xs={12} sm={6} lg={3}>\n                      <MetricCard color=\"secondary\">\n                        <CardContent sx={{ p: 3 }}>\n                          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                            <AccountBalanceWalletIcon sx={{ mr: 1, opacity: 0.8 }} />\n                            <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                              Total Payout\n                            </Typography>\n                          </Box>\n                          <Typography variant=\"h4\" fontWeight=\"600\">\n                            {formatCurrency(processedData.totalSalary)}\n                          </Typography>\n                        </CardContent>\n                      </MetricCard>\n                    </Grid>\n                    \n                    <Grid item xs={12} sm={6} lg={3}>\n                      <MetricCard color=\"success\">\n                        <CardContent sx={{ p: 3 }}>\n                          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                            <TrendingUpIcon sx={{ mr: 1, opacity: 0.8 }} />\n                            <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                              Average Salary\n                            </Typography>\n                          </Box>\n                          <Typography variant=\"h4\" fontWeight=\"600\">\n                            {formatCurrency(processedData.averageSalary)}\n                          </Typography>\n                        </CardContent>\n                      </MetricCard>\n                    </Grid>\n                    \n                    <Grid item xs={12} sm={6} lg={3}>\n                      <MetricCard color=\"warning\">\n                        <CardContent sx={{ p: 3 }}>\n                          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                            <AccessTimeIcon sx={{ mr: 1, opacity: 0.8 }} />\n                            <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                              Late Marks\n                            </Typography>\n                          </Box>\n                          <Typography variant=\"h4\" fontWeight=\"600\">\n                            {processedData.totalLateMarks}\n                          </Typography>\n                        </CardContent>\n                      </MetricCard>\n                    </Grid>\n                  </Grid>\n                </Zoom>\n              </Grid>\n            )}\n          </Grid>\n          \n          {salaryResults.length > 0 && (\n            <Fade in={salaryResults.length > 0} timeout={1000}>\n              <Box sx={{ mt: 4 }}>\n                <Typography variant=\"h5\" fontWeight=\"600\" color=\"text.primary\" gutterBottom>\n                  Salary Results\n                </Typography>\n                <StyledTableContainer component={Paper}>\n                  <Table aria-label=\"salary results table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Employee ID</TableCell>\n                        <TableCell>Name</TableCell>\n                        <TableCell align=\"right\">Monthly Salary</TableCell>\n                        <TableCell align=\"right\">Hours (Expected/Actual)</TableCell>\n                        <TableCell align=\"right\">Coefficient</TableCell>\n                        <TableCell align=\"right\">Late Marks</TableCell>\n                        <TableCell align=\"right\">Final Salary</TableCell>\n                        <TableCell align=\"center\">Status</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {salaryResults.map((row) => {\n                        const statusColor = getStatusColor(row.coefficient);\n                        \n                        return (\n                          <TableRow key={row.employeeId}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.employeeId}\n                            </TableCell>\n                            <TableCell>\n                              <Typography fontWeight=\"500\">{row.employeeName}</Typography>\n                            </TableCell>\n                            <TableCell align=\"right\">{formatCurrency(row.monthlySalary)}</TableCell>\n                            <TableCell align=\"right\">\n                              <Tooltip title={`Expected: ${row.expectedHours ? row.expectedHours.toFixed(1) : '0.0'}, Actual: ${row.actualWorkedHours ? row.actualWorkedHours.toFixed(1) : '0.0'}`}>\n                                <span>{row.actualWorkedHours ? row.actualWorkedHours.toFixed(1) : '0.0'} / {row.expectedHours ? row.expectedHours.toFixed(1) : '0.0'}</span>\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                              <Typography fontWeight=\"500\" color={`${statusColor}.main`}>\n                                {formatPercentage(row.coefficient)}\n                              </Typography>\n                            </TableCell>\n                            <TableCell align=\"right\">{row.lateMarks}</TableCell>\n                            <TableCell align=\"right\">\n                              <Typography fontWeight=\"700\">\n                                {formatCurrency(row.finalPayableSalary)}\n                              </Typography>\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Chip \n                                label={getStatusLabel(row.coefficient)}\n                                color={statusColor}\n                                size=\"small\"\n                                sx={{ fontWeight: 500 }}\n                              />\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                    </TableBody>\n                  </Table>\n                </StyledTableContainer>\n              </Box>\n            </Fade>\n          )}\n        </Container>\n      </Fade>\n    </DashboardContainer>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}