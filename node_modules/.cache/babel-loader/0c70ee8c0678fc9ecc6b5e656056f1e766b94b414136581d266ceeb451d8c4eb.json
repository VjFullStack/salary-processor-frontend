{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import jwt_decode from'jwt-decode';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>useContext(AuthContext);export const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{// Check if user is already logged in\nconst token=localStorage.getItem('token');if(token){try{// Verify token expiration\nconst decodedToken=jwt_decode(token);const currentTime=Date.now()/1000;if(decodedToken.exp>currentTime){setCurrentUser(decodedToken);setIsAuthenticated(true);}else{// Token expired\nlocalStorage.removeItem('token');}}catch(error){console.error('Invalid token',error);localStorage.removeItem('token');}}setLoading(false);},[]);const login=token=>{// For demo, create a simplified user object without decoding\nif(token.startsWith('demo-token')){localStorage.setItem('token',token);setCurrentUser({sub:'1234567890',name:'Admin User',role:'admin'});setIsAuthenticated(true);return;}// Normal flow for when using a real JWT token\ntry{localStorage.setItem('token',token);const decodedToken=jwt_decode(token);setCurrentUser(decodedToken);setIsAuthenticated(true);}catch(error){console.error('Error decoding token:',error);// Fall back to demo user if token decode fails\nsetCurrentUser({sub:'1234567890',name:'Demo User',role:'user'});setIsAuthenticated(true);}};const logout=()=>{localStorage.removeItem('token');setCurrentUser(null);setIsAuthenticated(false);};const value={currentUser,isAuthenticated,loading,login,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};// Helper function to check if we're in demo mode\nexport const isDemoMode=()=>{const token=localStorage.getItem('token');return token&&token.startsWith('demo-token');};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jwt_decode","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","loading","setLoading","token","localStorage","getItem","decodedToken","currentTime","Date","now","exp","removeItem","error","console","login","startsWith","setItem","sub","name","role","logout","value","Provider","isDemoMode"],"sources":["/Users/vsalokhe/CascadeProjects/salary-processor-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport jwt_decode from 'jwt-decode';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        // Verify token expiration\n        const decodedToken = jwt_decode(token);\n        const currentTime = Date.now() / 1000;\n        \n        if (decodedToken.exp > currentTime) {\n          setCurrentUser(decodedToken);\n          setIsAuthenticated(true);\n        } else {\n          // Token expired\n          localStorage.removeItem('token');\n        }\n      } catch (error) {\n        console.error('Invalid token', error);\n        localStorage.removeItem('token');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = (token) => {\n    // For demo, create a simplified user object without decoding\n    if (token.startsWith('demo-token')) {\n      localStorage.setItem('token', token);\n      setCurrentUser({\n        sub: '1234567890',\n        name: 'Admin User',\n        role: 'admin'\n      });\n      setIsAuthenticated(true);\n      return;\n    }\n    \n    // Normal flow for when using a real JWT token\n    try {\n      localStorage.setItem('token', token);\n      const decodedToken = jwt_decode(token);\n      setCurrentUser(decodedToken);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      // Fall back to demo user if token decode fails\n      setCurrentUser({\n        sub: '1234567890',\n        name: 'Demo User',\n        role: 'user'\n      });\n      setIsAuthenticated(true);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n  };\n\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    login,\n    logout\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\n// Helper function to check if we're in demo mode\nexport const isDemoMode = () => {\n  const token = localStorage.getItem('token');\n  return token && token.startsWith('demo-token');\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}