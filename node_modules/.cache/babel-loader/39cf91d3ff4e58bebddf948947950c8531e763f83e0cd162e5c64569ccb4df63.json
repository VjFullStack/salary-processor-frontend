{"ast":null,"code":"var _jsxFileName = \"/Users/vsalokhe/CascadeProjects/salary-processor-frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Box, Typography, Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Alert, CircularProgress, Grid, Card, CardContent, Container, Divider, Chip, Tooltip, Fade, Zoom, useTheme, FormControl, InputLabel, Select, MenuItem, Stack } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport PeopleIcon from '@mui/icons-material/People';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport { salaryService } from '../services/api';\nimport { isDemoMode } from '../context/AuthContext';\n\n// Styled components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled(Box)(({\n  theme\n}) => ({\n  minHeight: 'calc(100vh - 64px)',\n  background: 'linear-gradient(135deg, rgba(25, 118, 210, 0.05) 0%, rgba(156, 39, 176, 0.05) 100%)',\n  padding: theme.spacing(3)\n}));\n_c = DashboardContainer;\nconst PageHeader = styled(Box)(({\n  theme\n}) => ({\n  marginBottom: theme.spacing(4),\n  display: 'flex',\n  flexDirection: 'column',\n  [theme.breakpoints.up('md')]: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n}));\n_c2 = PageHeader;\nconst StyledCard = styled(Card)(({\n  theme\n}) => ({\n  borderRadius: '16px',\n  boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\n  height: '100%',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    transform: 'translateY(-5px)',\n    boxShadow: '0 12px 40px rgba(0, 0, 0, 0.15)'\n  }\n}));\nconst MetricCard = styled(StyledCard)(({\n  theme,\n  color = 'primary'\n}) => ({\n  background: `linear-gradient(135deg, ${theme.palette[color].light} 0%, ${theme.palette[color].main} 100%)`,\n  color: 'white'\n}));\n_c3 = MetricCard;\nconst UploadCard = styled(StyledCard)(({\n  theme\n}) => ({\n  background: 'white',\n  overflow: 'hidden',\n  position: 'relative',\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    width: '30%',\n    height: '30%',\n    background: 'linear-gradient(135deg, transparent 0%, rgba(25, 118, 210, 0.05) 100%)',\n    borderTopLeftRadius: '50%'\n  }\n}));\n_c4 = UploadCard;\nconst FileUploadArea = styled(Box)(({\n  theme,\n  isDragging\n}) => ({\n  border: `2px dashed ${isDragging ? theme.palette.primary.main : '#ccc'}`,\n  borderRadius: '12px',\n  padding: theme.spacing(4),\n  textAlign: 'center',\n  backgroundColor: isDragging ? 'rgba(25, 118, 210, 0.05)' : '#f9f9f9',\n  margin: theme.spacing(2, 0, 3),\n  cursor: 'pointer',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    borderColor: theme.palette.primary.main,\n    backgroundColor: 'rgba(25, 118, 210, 0.05)'\n  }\n}));\n_c5 = FileUploadArea;\nconst ActionButton = styled(Button)(({\n  theme\n}) => ({\n  borderRadius: '28px',\n  padding: theme.spacing(1.2, 3),\n  textTransform: 'none',\n  fontWeight: 600,\n  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    transform: 'translateY(-2px)',\n    boxShadow: '0 6px 16px rgba(0, 0, 0, 0.15)'\n  }\n}));\n_c6 = ActionButton;\nconst StyledTableContainer = styled(TableContainer)(({\n  theme\n}) => ({\n  borderRadius: '12px',\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.08)',\n  '.MuiTableCell-head': {\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n    fontWeight: 600\n  },\n  '.MuiTableRow-root': {\n    '&:nth-of-type(odd)': {\n      backgroundColor: 'rgba(0, 0, 0, 0.02)'\n    },\n    '&:hover': {\n      backgroundColor: 'rgba(25, 118, 210, 0.05)'\n    }\n  }\n}));\n_c7 = StyledTableContainer;\nconst Dashboard = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [salaryResults, setSalaryResults] = useState([]);\n  const [processedData, setProcessedData] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [fadeIn, setFadeIn] = useState(false);\n  const [totalDays, setTotalDays] = useState(30); // Default to 30 days\n  const [daysLoading, setDaysLoading] = useState(false);\n  const fileInputRef = useRef(null);\n  const theme = useTheme();\n  useEffect(() => {\n    // Trigger fade-in animation after component mounts\n    setFadeIn(true);\n\n    // Load current total days setting\n    const loadTotalDays = async () => {\n      try {\n        setDaysLoading(true);\n        const response = await salaryService.getTotalWorkingDays();\n        if (response && response.totalWorkingDays) {\n          setTotalDays(response.totalWorkingDays);\n        }\n      } catch (error) {\n        console.error('Failed to load total days setting:', error);\n        // Keep default value\n      } finally {\n        setDaysLoading(false);\n      }\n    };\n    if (!isDemoMode()) {\n      loadTotalDays();\n    }\n  }, []);\n  const handleFileChange = e => {\n    console.log('File input changed:', e.target.files);\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      console.log('Selected file:', selectedFile.name, selectedFile.type, selectedFile.size);\n      console.log('File details:', {\n        name: selectedFile.name,\n        type: selectedFile.type,\n        size: selectedFile.size,\n        lastModified: new Date(selectedFile.lastModified).toISOString()\n      });\n\n      // Check if the file is an Excel file\n      if (!selectedFile.name.endsWith('.xls') && !selectedFile.name.endsWith('.xlsx')) {\n        console.log('File is not an Excel file');\n        setError('Please upload an Excel file (.xls or .xlsx)');\n        setFile(null);\n        return;\n      }\n      console.log('File is valid, setting in state');\n      setError('');\n      setFile(selectedFile);\n      console.log('File set in state:', selectedFile.name);\n      console.log('IMPORTANT: Please click the \"Process Data\" button to submit the file to the backend');\n    } else {\n      console.log('No file selected');\n    }\n  };\n  const handleFileUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  // Drag and drop handlers\n  const handleDragOver = e => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    setIsDragging(false);\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const droppedFile = e.dataTransfer.files[0];\n\n      // Check if the file is an Excel file\n      if (!droppedFile.name.endsWith('.xls') && !droppedFile.name.endsWith('.xlsx')) {\n        setError('Please upload an Excel file (.xls or .xlsx)');\n        return;\n      }\n      setError('');\n      setFile(droppedFile);\n\n      // In demo mode, automatically process the file after a short delay\n      if (isDemoMode()) {\n        setLoading(true);\n        setTimeout(() => {\n          processDemoData();\n          setLoading(false);\n        }, 1500); // Simulate processing time\n      }\n    }\n  };\n\n  // Mock data for demo mode\n  const mockSalaryData = {\n    employeeResults: [{\n      employeeId: 1,\n      employeeName: 'John Doe',\n      expectedHours: 160,\n      actualWorkedHours: 165,\n      monthlySalary: 5000,\n      finalPayableSalary: 5156.25,\n      lateMarks: 0,\n      coefficient: 1.03\n    }, {\n      employeeId: 2,\n      employeeName: 'Jane Smith',\n      expectedHours: 160,\n      actualWorkedHours: 155,\n      monthlySalary: 4800,\n      finalPayableSalary: 4650,\n      lateMarks: 1,\n      coefficient: 0.97\n    }, {\n      employeeId: 3,\n      employeeName: 'Mike Johnson',\n      expectedHours: 160,\n      actualWorkedHours: 152,\n      monthlySalary: 5200,\n      finalPayableSalary: 4940,\n      lateMarks: 2,\n      coefficient: 0.95\n    }, {\n      employeeId: 4,\n      employeeName: 'Sarah Williams',\n      expectedHours: 160,\n      actualWorkedHours: 168,\n      monthlySalary: 5500,\n      finalPayableSalary: 5775,\n      lateMarks: 0,\n      coefficient: 1.05\n    }, {\n      employeeId: 5,\n      employeeName: 'David Brown',\n      expectedHours: 160,\n      actualWorkedHours: 140,\n      monthlySalary: 4700,\n      finalPayableSalary: 4112.5,\n      lateMarks: 3,\n      coefficient: 0.87\n    }]\n  };\n\n  // Calculate metrics from salary results\n  const calculateMetrics = results => {\n    const totalEmployees = results.length;\n    const totalSalary = results.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n    const averageSalary = totalSalary / totalEmployees;\n    const totalLateMarks = results.reduce((sum, item) => sum + item.lateMarks, 0);\n    setProcessedData({\n      totalEmployees,\n      totalSalary,\n      averageSalary,\n      totalLateMarks\n    });\n  };\n\n  // Process demo data function\n  const processDemoData = () => {\n    setSalaryResults(mockSalaryData.employeeResults);\n    calculateMetrics(mockSalaryData.employeeResults);\n  };\n\n  // Auto-load mock data in demo mode\n  useEffect(() => {\n    if (isDemoMode()) {\n      // Simulate loading delay\n      const timer = setTimeout(() => {\n        // Set salary results\n        setSalaryResults(mockSalaryData.employeeResults);\n\n        // Calculate summary data for metrics\n        const totalEmployees = mockSalaryData.employeeResults.length;\n        const totalSalary = mockSalaryData.employeeResults.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n        const averageSalary = totalSalary / totalEmployees;\n        const totalLateMarks = mockSalaryData.employeeResults.reduce((sum, item) => sum + item.lateMarks, 0);\n\n        // Set processed data with calculated metrics\n        setProcessedData({\n          totalEmployees,\n          totalSalary,\n          averageSalary,\n          totalLateMarks\n        });\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n\n  // Handle total days change\n  const handleTotalDaysChange = async event => {\n    const newValue = event.target.value;\n    setTotalDays(newValue);\n    try {\n      setDaysLoading(true);\n      await salaryService.setTotalWorkingDays(newValue);\n      console.log(`Total working days updated to ${newValue}`);\n    } catch (error) {\n      console.error('Failed to update total days:', error);\n      setError(`Failed to update total working days: ${error.message || ''}`);\n    } finally {\n      setDaysLoading(false);\n    }\n  };\n  const handleProcessSalary = async () => {\n    console.log('Process salary button clicked');\n    console.log('File object:', file);\n    console.log('File name:', file === null || file === void 0 ? void 0 : file.name);\n    console.log('File type:', file === null || file === void 0 ? void 0 : file.type);\n    console.log('File size:', file === null || file === void 0 ? void 0 : file.size);\n    console.log('Using total days:', totalDays);\n\n    // Log the token information to verify authentication\n    const token = localStorage.getItem('token');\n    console.log('Auth token exists:', !!token);\n    console.log('Auth token first 10 chars:', token ? token.substring(0, 10) + '...' : 'No token');\n    if (!file) {\n      console.error('No file in state');\n      setError('Please upload a file first');\n      return;\n    }\n    setLoading(true);\n    setError('');\n\n    // Create a form data object for the file upload\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // Log all entries in the FormData (for debugging)\n    console.log('FormData created, entries:');\n    for (let pair of formData.entries()) {\n      console.log(pair[0] + ': ' + (pair[1] instanceof File ? `File(${pair[1].name}, ${pair[1].type}, ${pair[1].size} bytes)` : pair[1]));\n    }\n    try {\n      console.log('Making API call to process salary with total days:', totalDays);\n      console.log('Making API call with file:', file.name);\n      console.log('API URL:', process.env.REACT_APP_API_URL || 'http://localhost:8080/api');\n\n      // Make direct API call instead of using the service to debug\n      const apiUrl = `${process.env.REACT_APP_API_URL || 'http://localhost:8080/api'}/salary/process?totalDays=${totalDays}`;\n      console.log('Full API URL:', apiUrl);\n\n      // For debugging, try a direct fetch request\n      console.log('Attempting direct fetch call to API...');\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Authorization': token ? `Bearer ${token}` : ''\n        },\n        body: formData\n      });\n      console.log('API Response status:', response.status, response.statusText);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const results = await response.json();\n      console.log('API response received:', results);\n      const employeeResults = results.employeeResults || results;\n      setSalaryResults(employeeResults);\n\n      // Calculate summary data\n      const totalEmployees = employeeResults.length;\n      const totalSalary = employeeResults.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n      const averageSalary = totalSalary / totalEmployees;\n      const totalLateMarks = employeeResults.reduce((sum, item) => sum + item.lateMarks, 0);\n      setProcessedData({\n        totalEmployees,\n        totalSalary,\n        averageSalary,\n        totalLateMarks\n      });\n    } catch (err) {\n      console.error('API call failed:', err);\n      console.error('Error details:', err.message, err.stack);\n      setError('Failed to process salary data. ' + (err.message || ''));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownloadPdf = async employeeId => {\n    try {\n      setLoading(true);\n\n      // Check if we're in demo mode\n      if (isDemoMode()) {\n        await new Promise(resolve => setTimeout(resolve, 800)); // Simulate download delay\n\n        // Generate a simple PDF with employee data in demo mode\n        const employee = salaryResults.find(emp => emp.employeeId === employeeId);\n        if (!employee) {\n          throw new Error('Employee not found');\n        }\n\n        // Create a simple PDF using Canvas and jsPDF (we simulate this)\n        simulatePdfDownload(employee);\n      } else {\n        const response = await salaryService.generatePdf(employeeId);\n\n        // Create blob URL\n        const blob = new Blob([response.data], {\n          type: 'application/pdf'\n        });\n        const url = window.URL.createObjectURL(blob);\n\n        // Create temporary link to download file\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `salary_slip_${employeeId}.pdf`);\n        document.body.appendChild(link);\n        link.click();\n\n        // Clean up\n        link.parentNode.removeChild(link);\n        window.URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      console.error('Error downloading PDF:', error);\n      setError('Error downloading PDF. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to handle bulk PDF download\n  const handleBulkPdfDownload = async () => {\n    if (!salaryResults || salaryResults.length === 0) {\n      setError('No salary data to download');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      // Check if we're in demo mode\n      if (isDemoMode()) {\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API delay\n\n        // Create a simple text file with all employee data in demo mode\n        const textContent = salaryResults.map(employee => {\n          return `\n            SALARY SLIP - ${employee.employeeName}\n            ------------------\n            \n            Employee ID: ${employee.employeeId}\n            Name: ${employee.employeeName}\n            \n            Basic Salary: ${formatCurrency(employee.monthlySalary)}\n            Performance Coefficient: ${formatPercentage(employee.coefficient)}\n            Late Marks: ${employee.lateMarks}\n            \n            Hours Expected: ${employee.expectedHours ? employee.expectedHours.toFixed(1) : '0.0'}\n            Hours Worked: ${employee.actualWorkedHours ? employee.actualWorkedHours.toFixed(1) : '0.0'}\n            \n            Final Payable Salary: ${formatCurrency(employee.finalPayableSalary)}\n            \n            This is a demo PDF generated on ${new Date().toLocaleDateString()}\n            ==========================================\n          `;\n        }).join('\\n');\n\n        // Create a Blob with the text content\n        const blob = new Blob([textContent], {\n          type: 'text/plain'\n        });\n        const url = window.URL.createObjectURL(blob);\n\n        // Create a download link\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'all_salary_slips.txt');\n        document.body.appendChild(link);\n        link.click();\n\n        // Clean up\n        link.parentNode.removeChild(link);\n        window.URL.revokeObjectURL(url);\n      } else {\n        // In real mode, call the bulk PDF generation API\n        await salaryService.generatePDFs(file);\n      }\n    } catch (error) {\n      console.error('Error generating bulk PDFs:', error);\n      setError('Error generating bulk PDFs. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to simulate PDF download in demo mode\n  const simulatePdfDownload = employee => {\n    // Create a text representation of what would be in the PDF\n    const pdfContent = `\n      SALARY SLIP\n      ------------------\n      \n      Employee ID: ${employee.employeeId}\n      Name: ${employee.employeeName}\n      \n      Basic Salary: ${formatCurrency(employee.monthlySalary)}\n      Performance Coefficient: ${formatPercentage(employee.coefficient)}\n      Late Marks: ${employee.lateMarks}\n      \n      Hours Expected: ${employee.expectedHours ? employee.expectedHours.toFixed(1) : '0.0'}\n      Hours Worked: ${employee.actualWorkedHours ? employee.actualWorkedHours.toFixed(1) : '0.0'}\n      \n      Final Payable Salary: ${formatCurrency(employee.finalPayableSalary)}\n      \n      This is a demo PDF generated on ${new Date().toLocaleDateString()}\n    `;\n\n    // Create a Blob with the text content\n    const blob = new Blob([pdfContent], {\n      type: 'text/plain'\n    });\n    const url = window.URL.createObjectURL(blob);\n\n    // Create a download link\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', `demo_salary_slip_${employee.employeeId}.txt`);\n    document.body.appendChild(link);\n    link.click();\n\n    // Clean up\n    link.parentNode.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n\n  // Format currency with safety check\n  const formatCurrency = amount => {\n    // Return 0 if amount is undefined or null\n    if (amount === undefined || amount === null) {\n      return new Intl.NumberFormat('en-IN', {\n        style: 'currency',\n        currency: 'INR',\n        minimumFractionDigits: 2\n      }).format(0);\n    }\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n\n  // Format percentage with safety check\n  const formatPercentage = value => {\n    // Return 0% if value is undefined or null\n    if (value === undefined || value === null) {\n      return '0.00%';\n    }\n    return (value * 100).toFixed(2) + '%';\n  };\n\n  // Get status color based on coefficient\n  const getStatusColor = coefficient => {\n    // Add safety check\n    if (!coefficient) return 'warning';\n    if (coefficient >= 0.95) return 'success';\n    if (coefficient >= 0.85) return 'warning';\n    return 'error';\n  };\n\n  // Get status label based on coefficient\n  const getStatusLabel = coefficient => {\n    // Add safety check\n    if (!coefficient) return 'N/A';\n    if (coefficient >= 0.95) return 'Excellent';\n    if (coefficient >= 0.85) return 'Good';\n    if (coefficient >= 0.75) return 'Average';\n    return 'Below Average';\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    children: /*#__PURE__*/_jsxDEV(Fade, {\n      in: fadeIn,\n      timeout: 800,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h1\",\n              fontWeight: \"700\",\n              color: \"primary.main\",\n              children: \"Salary Processor Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: \"Upload, process and manage employee salary data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this), processedData && /*#__PURE__*/_jsxDEV(Chip, {\n            label: `Month: ${new Date().toLocaleString('default', {\n              month: 'long',\n              year: 'numeric'\n            })}`,\n            color: \"primary\",\n            variant: \"outlined\",\n            sx: {\n              fontWeight: 600,\n              borderRadius: '16px',\n              mt: {\n                xs: 2,\n                md: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Fade, {\n          in: !!error,\n          timeout: 500,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            variant: \"filled\",\n            sx: {\n              mb: 3,\n              borderRadius: '12px'\n            },\n            onClose: () => setError(''),\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 5,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Zoom, {\n              in: fadeIn,\n              timeout: 800,\n              children: /*#__PURE__*/_jsxDEV(UploadCard, {\n                elevation: 3,\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  sx: {\n                    p: 3\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    fontWeight: \"600\",\n                    gutterBottom: true,\n                    children: \"Upload Attendance Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 647,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                    sx: {\n                      mb: 2\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FileUploadArea, {\n                    onClick: handleFileUploadClick,\n                    onDragOver: handleDragOver,\n                    onDragLeave: handleDragLeave,\n                    onDrop: handleDrop,\n                    isDragging: isDragging,\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      accept: \".xls,.xlsx\",\n                      onChange: handleFileChange,\n                      hidden: true,\n                      ref: fileInputRef\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 659,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                      sx: {\n                        fontSize: 64,\n                        color: isDragging ? 'primary.main' : 'primary.light',\n                        mb: 2,\n                        transition: 'all 0.3s ease'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 667,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      gutterBottom: true,\n                      color: isDragging ? 'primary.main' : 'inherit',\n                      children: file ? file.name : 'Drag & Drop or Click to Upload'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 676,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: \"Upload monthly attendance Excel file (.xls or .xlsx)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 680,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      fullWidth: true,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        id: \"total-days-label\",\n                        children: \"Total Working Days\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 687,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        labelId: \"total-days-label\",\n                        id: \"total-days\",\n                        value: totalDays,\n                        onChange: handleTotalDaysChange,\n                        label: \"Total Working Days\",\n                        disabled: daysLoading || loading,\n                        children: Array.from({\n                          length: 31\n                        }, (_, i) => i + 1).map(days => /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: days,\n                          children: [days, \" days\"]\n                        }, days, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 697,\n                          columnNumber: 29\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 688,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 686,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 685,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      sm: 6,\n                      children: /*#__PURE__*/_jsxDEV(ActionButton, {\n                        variant: \"contained\",\n                        color: \"primary\",\n                        fullWidth: true,\n                        onClick: handleProcessSalary,\n                        disabled: !file || loading,\n                        startIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                          size: 20\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 711,\n                          columnNumber: 48\n                        }, this) : /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 711,\n                          columnNumber: 81\n                        }, this),\n                        children: [\"Process Data (\", totalDays, \" days)\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 705,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 704,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 703,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this), processedData && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 7,\n            lg: 8,\n            children: /*#__PURE__*/_jsxDEV(Zoom, {\n              in: !!processedData,\n              timeout: 500,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  lg: 3,\n                  children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                    color: \"primary\",\n                    children: /*#__PURE__*/_jsxDEV(CardContent, {\n                      sx: {\n                        p: 3\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        mb: 1,\n                        children: [/*#__PURE__*/_jsxDEV(PeopleIcon, {\n                          sx: {\n                            mr: 1,\n                            opacity: 0.8\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 730,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          sx: {\n                            opacity: 0.8\n                          },\n                          children: \"Employees\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 731,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 729,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h4\",\n                        fontWeight: \"600\",\n                        children: processedData.totalEmployees\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 735,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 728,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 727,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  lg: 3,\n                  children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                    color: \"secondary\",\n                    children: /*#__PURE__*/_jsxDEV(CardContent, {\n                      sx: {\n                        p: 3\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        mb: 1,\n                        children: [/*#__PURE__*/_jsxDEV(AccountBalanceWalletIcon, {\n                          sx: {\n                            mr: 1,\n                            opacity: 0.8\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 746,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          sx: {\n                            opacity: 0.8\n                          },\n                          children: \"Total Payout\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 747,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 745,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h4\",\n                        fontWeight: \"600\",\n                        children: formatCurrency(processedData.totalSalary)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 751,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 744,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 743,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  lg: 3,\n                  children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                    color: \"success\",\n                    children: /*#__PURE__*/_jsxDEV(CardContent, {\n                      sx: {\n                        p: 3\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        mb: 1,\n                        children: [/*#__PURE__*/_jsxDEV(TrendingUpIcon, {\n                          sx: {\n                            mr: 1,\n                            opacity: 0.8\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 762,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          sx: {\n                            opacity: 0.8\n                          },\n                          children: \"Average Salary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 763,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 761,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h4\",\n                        fontWeight: \"600\",\n                        children: formatCurrency(processedData.averageSalary)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 767,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 760,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 759,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  lg: 3,\n                  children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                    color: \"warning\",\n                    children: /*#__PURE__*/_jsxDEV(CardContent, {\n                      sx: {\n                        p: 3\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        mb: 1,\n                        children: [/*#__PURE__*/_jsxDEV(AccessTimeIcon, {\n                          sx: {\n                            mr: 1,\n                            opacity: 0.8\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 778,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          sx: {\n                            opacity: 0.8\n                          },\n                          children: \"Late Marks\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 779,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 777,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h4\",\n                        fontWeight: \"600\",\n                        children: processedData.totalLateMarks\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 783,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 776,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 775,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 774,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), salaryResults.length > 0 && /*#__PURE__*/_jsxDEV(Fade, {\n          in: salaryResults.length > 0,\n          timeout: 1000,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              fontWeight: \"600\",\n              color: \"text.primary\",\n              gutterBottom: true,\n              children: \"Salary Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableContainer, {\n              component: Paper,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                \"aria-label\": \"salary results table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Employee ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 805,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 806,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Monthly Salary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 807,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Hours (Expected/Actual)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 808,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Coefficient\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 809,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Late Marks\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 810,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Final Salary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 811,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 812,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"Actions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 813,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 804,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 803,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: salaryResults.map(row => {\n                    const statusColor = getStatusColor(row.coefficient);\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        component: \"th\",\n                        scope: \"row\",\n                        children: row.employeeId\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 822,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          fontWeight: \"500\",\n                          children: row.employeeName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 826,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 825,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: formatCurrency(row.monthlySalary)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 828,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                          title: `Expected: ${row.expectedHours ? row.expectedHours.toFixed(1) : '0.0'}, Actual: ${row.actualWorkedHours ? row.actualWorkedHours.toFixed(1) : '0.0'}`,\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: [row.actualWorkedHours ? row.actualWorkedHours.toFixed(1) : '0.0', \" / \", row.expectedHours ? row.expectedHours.toFixed(1) : '0.0']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 831,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 830,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 829,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          fontWeight: \"500\",\n                          color: `${statusColor}.main`,\n                          children: formatPercentage(row.coefficient)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 835,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 834,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: row.lateMarks\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 839,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          fontWeight: \"700\",\n                          children: formatCurrency(row.finalPayableSalary)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 841,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 840,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: /*#__PURE__*/_jsxDEV(Chip, {\n                          label: getStatusLabel(row.coefficient),\n                          color: statusColor,\n                          size: \"small\",\n                          sx: {\n                            fontWeight: 500\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 846,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 845,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: /*#__PURE__*/_jsxDEV(ActionButton, {\n                          size: \"small\",\n                          variant: \"outlined\",\n                          color: \"primary\",\n                          onClick: () => handleDownloadPdf(row.employeeId),\n                          disabled: loading,\n                          startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 860,\n                            columnNumber: 44\n                          }, this),\n                          children: \"PDF\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 854,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 853,\n                        columnNumber: 29\n                      }, this)]\n                    }, row.employeeId, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 821,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 816,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 606,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"nktEz4wgOXV+EC0oS219NgQHyyM=\", false, function () {\n  return [useTheme];\n});\n_c8 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"PageHeader\");\n$RefreshReg$(_c3, \"MetricCard\");\n$RefreshReg$(_c4, \"UploadCard\");\n$RefreshReg$(_c5, \"FileUploadArea\");\n$RefreshReg$(_c6, \"ActionButton\");\n$RefreshReg$(_c7, \"StyledTableContainer\");\n$RefreshReg$(_c8, \"Dashboard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","Box","Typography","Button","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Alert","CircularProgress","Grid","Card","CardContent","Container","Divider","Chip","Tooltip","Fade","Zoom","useTheme","FormControl","InputLabel","Select","MenuItem","Stack","styled","CloudUploadIcon","DownloadIcon","PlayArrowIcon","PeopleIcon","AccountBalanceWalletIcon","TrendingUpIcon","AccessTimeIcon","salaryService","isDemoMode","jsxDEV","_jsxDEV","DashboardContainer","theme","minHeight","background","padding","spacing","_c","PageHeader","marginBottom","display","flexDirection","breakpoints","up","justifyContent","alignItems","_c2","StyledCard","borderRadius","boxShadow","height","transition","transform","MetricCard","color","palette","light","main","_c3","UploadCard","overflow","position","content","bottom","right","width","borderTopLeftRadius","_c4","FileUploadArea","isDragging","border","primary","textAlign","backgroundColor","margin","cursor","borderColor","_c5","ActionButton","textTransform","fontWeight","_c6","StyledTableContainer","_c7","Dashboard","_s","file","setFile","error","setError","loading","setLoading","salaryResults","setSalaryResults","processedData","setProcessedData","setIsDragging","fadeIn","setFadeIn","totalDays","setTotalDays","daysLoading","setDaysLoading","fileInputRef","loadTotalDays","response","getTotalWorkingDays","totalWorkingDays","console","handleFileChange","e","log","target","files","selectedFile","name","type","size","lastModified","Date","toISOString","endsWith","handleFileUploadClick","current","click","handleDragOver","preventDefault","handleDragLeave","handleDrop","dataTransfer","length","droppedFile","setTimeout","processDemoData","mockSalaryData","employeeResults","employeeId","employeeName","expectedHours","actualWorkedHours","monthlySalary","finalPayableSalary","lateMarks","coefficient","calculateMetrics","results","totalEmployees","totalSalary","reduce","sum","item","averageSalary","totalLateMarks","timer","clearTimeout","handleTotalDaysChange","event","newValue","value","setTotalWorkingDays","message","handleProcessSalary","token","localStorage","getItem","substring","formData","FormData","append","pair","entries","File","process","env","REACT_APP_API_URL","apiUrl","fetch","method","headers","body","status","statusText","ok","Error","json","err","stack","handleDownloadPdf","Promise","resolve","employee","find","emp","simulatePdfDownload","generatePdf","blob","Blob","data","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","appendChild","parentNode","removeChild","revokeObjectURL","handleBulkPdfDownload","textContent","map","formatCurrency","formatPercentage","toFixed","toLocaleDateString","join","generatePDFs","pdfContent","amount","undefined","Intl","NumberFormat","style","currency","minimumFractionDigits","format","getStatusColor","getStatusLabel","children","in","timeout","maxWidth","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","label","toLocaleString","month","year","sx","mt","xs","md","severity","mb","onClose","container","lg","elevation","p","gutterBottom","onClick","onDragOver","onDragLeave","onDrop","accept","onChange","hidden","ref","fontSize","fullWidth","id","labelId","disabled","Array","from","_","i","days","sm","startIcon","mr","opacity","align","row","statusColor","scope","title","_c8","$RefreshReg$"],"sources":["/Users/vsalokhe/CascadeProjects/salary-processor-frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { \n  Box, \n  Typography, \n  Button, \n  Paper, \n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Alert,\n  CircularProgress,\n  Grid,\n  Card,\n  CardContent,\n  Container,\n  Divider,\n  Chip,\n  Tooltip,\n  Fade,\n  Zoom,\n  useTheme,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Stack\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport PeopleIcon from '@mui/icons-material/People';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport { salaryService } from '../services/api';\nimport { isDemoMode } from '../context/AuthContext';\n\n// Styled components\nconst DashboardContainer = styled(Box)(({ theme }) => ({\n  minHeight: 'calc(100vh - 64px)',\n  background: 'linear-gradient(135deg, rgba(25, 118, 210, 0.05) 0%, rgba(156, 39, 176, 0.05) 100%)',\n  padding: theme.spacing(3),\n}));\n\nconst PageHeader = styled(Box)(({ theme }) => ({\n  marginBottom: theme.spacing(4),\n  display: 'flex',\n  flexDirection: 'column',\n  [theme.breakpoints.up('md')]: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  borderRadius: '16px',\n  boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\n  height: '100%',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    transform: 'translateY(-5px)',\n    boxShadow: '0 12px 40px rgba(0, 0, 0, 0.15)',\n  },\n}));\n\nconst MetricCard = styled(StyledCard)(({ theme, color = 'primary' }) => ({\n  background: `linear-gradient(135deg, ${theme.palette[color].light} 0%, ${theme.palette[color].main} 100%)`,\n  color: 'white',\n}));\n\nconst UploadCard = styled(StyledCard)(({ theme }) => ({\n  background: 'white',\n  overflow: 'hidden',\n  position: 'relative',\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    width: '30%',\n    height: '30%',\n    background: 'linear-gradient(135deg, transparent 0%, rgba(25, 118, 210, 0.05) 100%)',\n    borderTopLeftRadius: '50%',\n  },\n}));\n\nconst FileUploadArea = styled(Box)(({ theme, isDragging }) => ({\n  border: `2px dashed ${isDragging ? theme.palette.primary.main : '#ccc'}`,\n  borderRadius: '12px',\n  padding: theme.spacing(4),\n  textAlign: 'center',\n  backgroundColor: isDragging ? 'rgba(25, 118, 210, 0.05)' : '#f9f9f9',\n  margin: theme.spacing(2, 0, 3),\n  cursor: 'pointer',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    borderColor: theme.palette.primary.main,\n    backgroundColor: 'rgba(25, 118, 210, 0.05)',\n  },\n}));\n\nconst ActionButton = styled(Button)(({ theme }) => ({\n  borderRadius: '28px',\n  padding: theme.spacing(1.2, 3),\n  textTransform: 'none',\n  fontWeight: 600,\n  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    transform: 'translateY(-2px)',\n    boxShadow: '0 6px 16px rgba(0, 0, 0, 0.15)',\n  },\n}));\n\nconst StyledTableContainer = styled(TableContainer)(({ theme }) => ({\n  borderRadius: '12px',\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.08)',\n  '.MuiTableCell-head': {\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n    fontWeight: 600,\n  },\n  '.MuiTableRow-root': {\n    '&:nth-of-type(odd)': {\n      backgroundColor: 'rgba(0, 0, 0, 0.02)',\n    },\n    '&:hover': {\n      backgroundColor: 'rgba(25, 118, 210, 0.05)',\n    },\n  },\n}));\n\nconst Dashboard = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [salaryResults, setSalaryResults] = useState([]);\n  const [processedData, setProcessedData] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [fadeIn, setFadeIn] = useState(false);\n  const [totalDays, setTotalDays] = useState(30); // Default to 30 days\n  const [daysLoading, setDaysLoading] = useState(false);\n  const fileInputRef = useRef(null);\n  const theme = useTheme();\n  \n  useEffect(() => {\n    // Trigger fade-in animation after component mounts\n    setFadeIn(true);\n    \n    // Load current total days setting\n    const loadTotalDays = async () => {\n      try {\n        setDaysLoading(true);\n        const response = await salaryService.getTotalWorkingDays();\n        if (response && response.totalWorkingDays) {\n          setTotalDays(response.totalWorkingDays);\n        }\n      } catch (error) {\n        console.error('Failed to load total days setting:', error);\n        // Keep default value\n      } finally {\n        setDaysLoading(false);\n      }\n    };\n    \n    if (!isDemoMode()) {\n      loadTotalDays();\n    }\n  }, []);\n\n  const handleFileChange = (e) => {\n    console.log('File input changed:', e.target.files);\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      console.log('Selected file:', selectedFile.name, selectedFile.type, selectedFile.size);\n      console.log('File details:', {\n        name: selectedFile.name,\n        type: selectedFile.type,\n        size: selectedFile.size,\n        lastModified: new Date(selectedFile.lastModified).toISOString()\n      });\n      \n      // Check if the file is an Excel file\n      if (\n        !selectedFile.name.endsWith('.xls') && \n        !selectedFile.name.endsWith('.xlsx')\n      ) {\n        console.log('File is not an Excel file');\n        setError('Please upload an Excel file (.xls or .xlsx)');\n        setFile(null);\n        return;\n      }\n      \n      console.log('File is valid, setting in state');\n      setError('');\n      setFile(selectedFile);\n      console.log('File set in state:', selectedFile.name);\n      console.log('IMPORTANT: Please click the \"Process Data\" button to submit the file to the backend');\n    } else {\n      console.log('No file selected');\n    }\n  };\n\n  const handleFileUploadClick = () => {\n    fileInputRef.current.click();\n  };\n  \n  // Drag and drop handlers\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  \n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n  \n  const handleDrop = (e) => {\n    e.preventDefault();\n    setIsDragging(false);\n    \n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const droppedFile = e.dataTransfer.files[0];\n      \n      // Check if the file is an Excel file\n      if (\n        !droppedFile.name.endsWith('.xls') && \n        !droppedFile.name.endsWith('.xlsx')\n      ) {\n        setError('Please upload an Excel file (.xls or .xlsx)');\n        return;\n      }\n      \n      setError('');\n      setFile(droppedFile);\n      \n      // In demo mode, automatically process the file after a short delay\n      if (isDemoMode()) {\n        setLoading(true);\n        setTimeout(() => {\n          processDemoData();\n          setLoading(false);\n        }, 1500); // Simulate processing time\n      }\n    }\n  };\n\n  // Mock data for demo mode\n  const mockSalaryData = {\n    employeeResults: [\n      { employeeId: 1, employeeName: 'John Doe', expectedHours: 160, actualWorkedHours: 165, monthlySalary: 5000, finalPayableSalary: 5156.25, lateMarks: 0, coefficient: 1.03 },\n      { employeeId: 2, employeeName: 'Jane Smith', expectedHours: 160, actualWorkedHours: 155, monthlySalary: 4800, finalPayableSalary: 4650, lateMarks: 1, coefficient: 0.97 },\n      { employeeId: 3, employeeName: 'Mike Johnson', expectedHours: 160, actualWorkedHours: 152, monthlySalary: 5200, finalPayableSalary: 4940, lateMarks: 2, coefficient: 0.95 },\n      { employeeId: 4, employeeName: 'Sarah Williams', expectedHours: 160, actualWorkedHours: 168, monthlySalary: 5500, finalPayableSalary: 5775, lateMarks: 0, coefficient: 1.05 },\n      { employeeId: 5, employeeName: 'David Brown', expectedHours: 160, actualWorkedHours: 140, monthlySalary: 4700, finalPayableSalary: 4112.5, lateMarks: 3, coefficient: 0.87 }\n    ]\n  };\n  \n  // Calculate metrics from salary results\n  const calculateMetrics = (results) => {\n    const totalEmployees = results.length;\n    const totalSalary = results.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n    const averageSalary = totalSalary / totalEmployees;\n    const totalLateMarks = results.reduce((sum, item) => sum + item.lateMarks, 0);\n    \n    setProcessedData({\n      totalEmployees,\n      totalSalary,\n      averageSalary,\n      totalLateMarks\n    });\n  };\n  \n  // Process demo data function\n  const processDemoData = () => {\n    setSalaryResults(mockSalaryData.employeeResults);\n    calculateMetrics(mockSalaryData.employeeResults);\n  };\n  \n  // Auto-load mock data in demo mode\n  useEffect(() => {\n    if (isDemoMode()) {\n      // Simulate loading delay\n      const timer = setTimeout(() => {\n        // Set salary results\n        setSalaryResults(mockSalaryData.employeeResults);\n        \n        // Calculate summary data for metrics\n        const totalEmployees = mockSalaryData.employeeResults.length;\n        const totalSalary = mockSalaryData.employeeResults.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n        const averageSalary = totalSalary / totalEmployees;\n        const totalLateMarks = mockSalaryData.employeeResults.reduce((sum, item) => sum + item.lateMarks, 0);\n        \n        // Set processed data with calculated metrics\n        setProcessedData({\n          totalEmployees,\n          totalSalary,\n          averageSalary,\n          totalLateMarks\n        });\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n\n  // Handle total days change\n  const handleTotalDaysChange = async (event) => {\n    const newValue = event.target.value;\n    setTotalDays(newValue);\n    \n    try {\n      setDaysLoading(true);\n      await salaryService.setTotalWorkingDays(newValue);\n      console.log(`Total working days updated to ${newValue}`);\n    } catch (error) {\n      console.error('Failed to update total days:', error);\n      setError(`Failed to update total working days: ${error.message || ''}`);\n    } finally {\n      setDaysLoading(false);\n    }\n  };\n  \n  const handleProcessSalary = async () => {\n    console.log('Process salary button clicked');\n    console.log('File object:', file);\n    console.log('File name:', file?.name);\n    console.log('File type:', file?.type);\n    console.log('File size:', file?.size);\n    console.log('Using total days:', totalDays);\n    \n    // Log the token information to verify authentication\n    const token = localStorage.getItem('token');\n    console.log('Auth token exists:', !!token);\n    console.log('Auth token first 10 chars:', token ? token.substring(0, 10) + '...' : 'No token');\n    \n    if (!file) {\n      console.error('No file in state');\n      setError('Please upload a file first');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    // Create a form data object for the file upload\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    // Log all entries in the FormData (for debugging)\n    console.log('FormData created, entries:');\n    for (let pair of formData.entries()) {\n      console.log(pair[0] + ': ' + (pair[1] instanceof File ? \n        `File(${pair[1].name}, ${pair[1].type}, ${pair[1].size} bytes)` : pair[1]));\n    }\n\n    try {\n      console.log('Making API call to process salary with total days:', totalDays);\n      console.log('Making API call with file:', file.name);\n      console.log('API URL:', process.env.REACT_APP_API_URL || 'http://localhost:8080/api');\n      \n      // Make direct API call instead of using the service to debug\n      const apiUrl = `${process.env.REACT_APP_API_URL || 'http://localhost:8080/api'}/salary/process?totalDays=${totalDays}`;\n      console.log('Full API URL:', apiUrl);\n      \n      // For debugging, try a direct fetch request\n      console.log('Attempting direct fetch call to API...');\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Authorization': token ? `Bearer ${token}` : ''\n        },\n        body: formData\n      });\n      \n      console.log('API Response status:', response.status, response.statusText);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      \n      const results = await response.json();\n      console.log('API response received:', results);\n      const employeeResults = results.employeeResults || results;\n      setSalaryResults(employeeResults);\n      \n      // Calculate summary data\n      const totalEmployees = employeeResults.length;\n      const totalSalary = employeeResults.reduce((sum, item) => sum + item.finalPayableSalary, 0);\n      const averageSalary = totalSalary / totalEmployees;\n      const totalLateMarks = employeeResults.reduce((sum, item) => sum + item.lateMarks, 0);\n      \n      setProcessedData({\n        totalEmployees,\n        totalSalary,\n        averageSalary,\n        totalLateMarks\n      });\n    } catch (err) {\n      console.error('API call failed:', err);\n      console.error('Error details:', err.message, err.stack);\n      setError('Failed to process salary data. ' + (err.message || ''));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownloadPdf = async (employeeId) => {\n    try {\n      setLoading(true);\n      \n      // Check if we're in demo mode\n      if (isDemoMode()) {\n        await new Promise(resolve => setTimeout(resolve, 800)); // Simulate download delay\n        \n        // Generate a simple PDF with employee data in demo mode\n        const employee = salaryResults.find(emp => emp.employeeId === employeeId);\n        if (!employee) {\n          throw new Error('Employee not found');\n        }\n        \n        // Create a simple PDF using Canvas and jsPDF (we simulate this)\n        simulatePdfDownload(employee);\n      } else {\n        const response = await salaryService.generatePdf(employeeId);\n        \n        // Create blob URL\n        const blob = new Blob([response.data], { type: 'application/pdf' });\n        const url = window.URL.createObjectURL(blob);\n\n        // Create temporary link to download file\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `salary_slip_${employeeId}.pdf`);\n        document.body.appendChild(link);\n        link.click();\n\n        // Clean up\n        link.parentNode.removeChild(link);\n        window.URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      console.error('Error downloading PDF:', error);\n      setError('Error downloading PDF. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Function to handle bulk PDF download\n  const handleBulkPdfDownload = async () => {\n    if (!salaryResults || salaryResults.length === 0) {\n      setError('No salary data to download');\n      return;\n    }\n    \n    setLoading(true);\n    setError('');\n    \n    try {\n      // Check if we're in demo mode\n      if (isDemoMode()) {\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API delay\n        \n        // Create a simple text file with all employee data in demo mode\n        const textContent = salaryResults.map(employee => {\n          return `\n            SALARY SLIP - ${employee.employeeName}\n            ------------------\n            \n            Employee ID: ${employee.employeeId}\n            Name: ${employee.employeeName}\n            \n            Basic Salary: ${formatCurrency(employee.monthlySalary)}\n            Performance Coefficient: ${formatPercentage(employee.coefficient)}\n            Late Marks: ${employee.lateMarks}\n            \n            Hours Expected: ${employee.expectedHours ? employee.expectedHours.toFixed(1) : '0.0'}\n            Hours Worked: ${employee.actualWorkedHours ? employee.actualWorkedHours.toFixed(1) : '0.0'}\n            \n            Final Payable Salary: ${formatCurrency(employee.finalPayableSalary)}\n            \n            This is a demo PDF generated on ${new Date().toLocaleDateString()}\n            ==========================================\n          `;\n        }).join('\\n');\n        \n        // Create a Blob with the text content\n        const blob = new Blob([textContent], { type: 'text/plain' });\n        const url = window.URL.createObjectURL(blob);\n        \n        // Create a download link\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'all_salary_slips.txt');\n        document.body.appendChild(link);\n        link.click();\n        \n        // Clean up\n        link.parentNode.removeChild(link);\n        window.URL.revokeObjectURL(url);\n      } else {\n        // In real mode, call the bulk PDF generation API\n        await salaryService.generatePDFs(file);\n      }\n    } catch (error) {\n      console.error('Error generating bulk PDFs:', error);\n      setError('Error generating bulk PDFs. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Function to simulate PDF download in demo mode\n  const simulatePdfDownload = (employee) => {\n    // Create a text representation of what would be in the PDF\n    const pdfContent = `\n      SALARY SLIP\n      ------------------\n      \n      Employee ID: ${employee.employeeId}\n      Name: ${employee.employeeName}\n      \n      Basic Salary: ${formatCurrency(employee.monthlySalary)}\n      Performance Coefficient: ${formatPercentage(employee.coefficient)}\n      Late Marks: ${employee.lateMarks}\n      \n      Hours Expected: ${employee.expectedHours ? employee.expectedHours.toFixed(1) : '0.0'}\n      Hours Worked: ${employee.actualWorkedHours ? employee.actualWorkedHours.toFixed(1) : '0.0'}\n      \n      Final Payable Salary: ${formatCurrency(employee.finalPayableSalary)}\n      \n      This is a demo PDF generated on ${new Date().toLocaleDateString()}\n    `;\n    \n    // Create a Blob with the text content\n    const blob = new Blob([pdfContent], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    \n    // Create a download link\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', `demo_salary_slip_${employee.employeeId}.txt`);\n    document.body.appendChild(link);\n    link.click();\n    \n    // Clean up\n    link.parentNode.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  \n  // Format currency with safety check\n  const formatCurrency = (amount) => {\n    // Return 0 if amount is undefined or null\n    if (amount === undefined || amount === null) {\n      return new Intl.NumberFormat('en-IN', {\n        style: 'currency',\n        currency: 'INR',\n        minimumFractionDigits: 2\n      }).format(0);\n    }\n    \n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n  \n  // Format percentage with safety check\n  const formatPercentage = (value) => {\n    // Return 0% if value is undefined or null\n    if (value === undefined || value === null) {\n      return '0.00%';\n    }\n    \n    return (value * 100).toFixed(2) + '%';\n  };\n  \n  // Get status color based on coefficient\n  const getStatusColor = (coefficient) => {\n    // Add safety check\n    if (!coefficient) return 'warning';\n    \n    if (coefficient >= 0.95) return 'success';\n    if (coefficient >= 0.85) return 'warning';\n    return 'error';\n  };\n  \n  // Get status label based on coefficient\n  const getStatusLabel = (coefficient) => {\n    // Add safety check\n    if (!coefficient) return 'N/A';\n    \n    if (coefficient >= 0.95) return 'Excellent';\n    if (coefficient >= 0.85) return 'Good';\n    if (coefficient >= 0.75) return 'Average';\n    return 'Below Average';\n  };\n\n  return (\n    <DashboardContainer>\n      <Fade in={fadeIn} timeout={800}>\n        <Container maxWidth=\"xl\">\n          <PageHeader>\n            <Box>\n              <Typography variant=\"h4\" component=\"h1\" fontWeight=\"700\" color=\"primary.main\">\n                Salary Processor Dashboard\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\">\n                Upload, process and manage employee salary data\n              </Typography>\n            </Box>\n            \n            {processedData && (\n              <Chip \n                label={`Month: ${new Date().toLocaleString('default', { month: 'long', year: 'numeric' })}`}\n                color=\"primary\" \n                variant=\"outlined\"\n                sx={{ fontWeight: 600, borderRadius: '16px', mt: { xs: 2, md: 0 } }}\n              />\n            )}\n          </PageHeader>\n          \n          {error && (\n            <Fade in={!!error} timeout={500}>\n              <Alert \n                severity=\"error\" \n                variant=\"filled\"\n                sx={{ mb: 3, borderRadius: '12px' }}\n                onClose={() => setError('')}\n              >\n                {error}\n              </Alert>\n            </Fade>\n          )}\n          \n          <Grid container spacing={3}>\n            <Grid item xs={12} md={5} lg={4}>\n              <Zoom in={fadeIn} timeout={800}>\n                <UploadCard elevation={3}>\n                  <CardContent sx={{ p: 3 }}>\n                    <Typography variant=\"h6\" fontWeight=\"600\" gutterBottom>\n                      Upload Attendance Data\n                    </Typography>\n                    <Divider sx={{ mb: 2 }} />\n                    \n                    <FileUploadArea \n                      onClick={handleFileUploadClick}\n                      onDragOver={handleDragOver}\n                      onDragLeave={handleDragLeave}\n                      onDrop={handleDrop}\n                      isDragging={isDragging}\n                    >\n                      <input\n                        type=\"file\"\n                        accept=\".xls,.xlsx\"\n                        onChange={handleFileChange}\n                        hidden\n                        ref={fileInputRef}\n                      />\n                      \n                      <CloudUploadIcon \n                        sx={{ \n                          fontSize: 64, \n                          color: isDragging ? 'primary.main' : 'primary.light', \n                          mb: 2,\n                          transition: 'all 0.3s ease'\n                        }} \n                      />\n                      \n                      <Typography variant=\"h6\" gutterBottom color={isDragging ? 'primary.main' : 'inherit'}>\n                        {file ? file.name : 'Drag & Drop or Click to Upload'}\n                      </Typography>\n                      \n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Upload monthly attendance Excel file (.xls or .xlsx)\n                      </Typography>\n                    </FileUploadArea>\n                    \n                    <Box mb={2}>\n                      <FormControl fullWidth variant=\"outlined\" size=\"small\">\n                        <InputLabel id=\"total-days-label\">Total Working Days</InputLabel>\n                        <Select\n                          labelId=\"total-days-label\"\n                          id=\"total-days\"\n                          value={totalDays}\n                          onChange={handleTotalDaysChange}\n                          label=\"Total Working Days\"\n                          disabled={daysLoading || loading}\n                        >\n                          {Array.from({length: 31}, (_, i) => i + 1).map(days => (\n                            <MenuItem key={days} value={days}>{days} days</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Box>\n                    \n                    <Grid container spacing={2}>\n                      <Grid item xs={12} sm={6}>\n                        <ActionButton\n                          variant=\"contained\"\n                          color=\"primary\"\n                          fullWidth\n                          onClick={handleProcessSalary}\n                          disabled={!file || loading}\n                          startIcon={loading ? <CircularProgress size={20} /> : <PlayArrowIcon />}\n                        >\n                          Process Data ({totalDays} days)\n                        </ActionButton>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </UploadCard>\n              </Zoom>\n            </Grid>\n            \n            {processedData && (\n              <Grid item xs={12} md={7} lg={8}>\n                <Zoom in={!!processedData} timeout={500}>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6} lg={3}>\n                      <MetricCard color=\"primary\">\n                        <CardContent sx={{ p: 3 }}>\n                          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                            <PeopleIcon sx={{ mr: 1, opacity: 0.8 }} />\n                            <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                              Employees\n                            </Typography>\n                          </Box>\n                          <Typography variant=\"h4\" fontWeight=\"600\">\n                            {processedData.totalEmployees}\n                          </Typography>\n                        </CardContent>\n                      </MetricCard>\n                    </Grid>\n                    \n                    <Grid item xs={12} sm={6} lg={3}>\n                      <MetricCard color=\"secondary\">\n                        <CardContent sx={{ p: 3 }}>\n                          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                            <AccountBalanceWalletIcon sx={{ mr: 1, opacity: 0.8 }} />\n                            <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                              Total Payout\n                            </Typography>\n                          </Box>\n                          <Typography variant=\"h4\" fontWeight=\"600\">\n                            {formatCurrency(processedData.totalSalary)}\n                          </Typography>\n                        </CardContent>\n                      </MetricCard>\n                    </Grid>\n                    \n                    <Grid item xs={12} sm={6} lg={3}>\n                      <MetricCard color=\"success\">\n                        <CardContent sx={{ p: 3 }}>\n                          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                            <TrendingUpIcon sx={{ mr: 1, opacity: 0.8 }} />\n                            <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                              Average Salary\n                            </Typography>\n                          </Box>\n                          <Typography variant=\"h4\" fontWeight=\"600\">\n                            {formatCurrency(processedData.averageSalary)}\n                          </Typography>\n                        </CardContent>\n                      </MetricCard>\n                    </Grid>\n                    \n                    <Grid item xs={12} sm={6} lg={3}>\n                      <MetricCard color=\"warning\">\n                        <CardContent sx={{ p: 3 }}>\n                          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                            <AccessTimeIcon sx={{ mr: 1, opacity: 0.8 }} />\n                            <Typography variant=\"body2\" sx={{ opacity: 0.8 }}>\n                              Late Marks\n                            </Typography>\n                          </Box>\n                          <Typography variant=\"h4\" fontWeight=\"600\">\n                            {processedData.totalLateMarks}\n                          </Typography>\n                        </CardContent>\n                      </MetricCard>\n                    </Grid>\n                  </Grid>\n                </Zoom>\n              </Grid>\n            )}\n          </Grid>\n          \n          {salaryResults.length > 0 && (\n            <Fade in={salaryResults.length > 0} timeout={1000}>\n              <Box sx={{ mt: 4 }}>\n                <Typography variant=\"h5\" fontWeight=\"600\" color=\"text.primary\" gutterBottom>\n                  Salary Results\n                </Typography>\n                <StyledTableContainer component={Paper}>\n                  <Table aria-label=\"salary results table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Employee ID</TableCell>\n                        <TableCell>Name</TableCell>\n                        <TableCell align=\"right\">Monthly Salary</TableCell>\n                        <TableCell align=\"right\">Hours (Expected/Actual)</TableCell>\n                        <TableCell align=\"right\">Coefficient</TableCell>\n                        <TableCell align=\"right\">Late Marks</TableCell>\n                        <TableCell align=\"right\">Final Salary</TableCell>\n                        <TableCell align=\"center\">Status</TableCell>\n                        <TableCell align=\"center\">Actions</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {salaryResults.map((row) => {\n                        const statusColor = getStatusColor(row.coefficient);\n                        \n                        return (\n                          <TableRow key={row.employeeId}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.employeeId}\n                            </TableCell>\n                            <TableCell>\n                              <Typography fontWeight=\"500\">{row.employeeName}</Typography>\n                            </TableCell>\n                            <TableCell align=\"right\">{formatCurrency(row.monthlySalary)}</TableCell>\n                            <TableCell align=\"right\">\n                              <Tooltip title={`Expected: ${row.expectedHours ? row.expectedHours.toFixed(1) : '0.0'}, Actual: ${row.actualWorkedHours ? row.actualWorkedHours.toFixed(1) : '0.0'}`}>\n                                <span>{row.actualWorkedHours ? row.actualWorkedHours.toFixed(1) : '0.0'} / {row.expectedHours ? row.expectedHours.toFixed(1) : '0.0'}</span>\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                              <Typography fontWeight=\"500\" color={`${statusColor}.main`}>\n                                {formatPercentage(row.coefficient)}\n                              </Typography>\n                            </TableCell>\n                            <TableCell align=\"right\">{row.lateMarks}</TableCell>\n                            <TableCell align=\"right\">\n                              <Typography fontWeight=\"700\">\n                                {formatCurrency(row.finalPayableSalary)}\n                              </Typography>\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Chip \n                                label={getStatusLabel(row.coefficient)}\n                                color={statusColor}\n                                size=\"small\"\n                                sx={{ fontWeight: 500 }}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <ActionButton\n                                size=\"small\"\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={() => handleDownloadPdf(row.employeeId)}\n                                disabled={loading}\n                                startIcon={<DownloadIcon />}\n                              >\n                                PDF\n                              </ActionButton>\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                    </TableBody>\n                  </Table>\n                </StyledTableContainer>\n              </Box>\n            </Fade>\n          )}\n        </Container>\n      </Fade>\n    </DashboardContainer>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}